{"version":3,"sources":["../node_modules/workbox-core/_private.js","../node_modules/workbox-core/_private/Deferred.js","../node_modules/workbox-core/_private/WorkboxError.js","../node_modules/workbox-core/_private/assert.js","../node_modules/workbox-core/_private/cacheMatchIgnoreParams.js","../node_modules/workbox-core/_private/cacheNames.js","../node_modules/workbox-core/_private/canConstructReadableStream.js","../node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","../node_modules/workbox-core/_private/dontWaitFor.js","../node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","../node_modules/workbox-core/_private/getFriendlyURL.js","../node_modules/workbox-core/_private/logger.js","../node_modules/workbox-core/_private/resultingClientExists.js","../node_modules/workbox-core/_private/timeout.js","../node_modules/workbox-core/_private/waitUntil.js","../node_modules/workbox-core/_version.js","../node_modules/workbox-core/cacheNames.js","../node_modules/workbox-core/clientsClaim.js","../node_modules/workbox-core/copyResponse.js","../node_modules/workbox-core/index.js","../node_modules/workbox-core/models/messages/messageGenerator.js","../node_modules/workbox-core/models/messages/messages.js","../node_modules/workbox-core/models/quotaErrorCallbacks.js","../node_modules/workbox-core/registerQuotaErrorCallback.js","../node_modules/workbox-core/setCacheNameDetails.js","../node_modules/workbox-core/skipWaiting.js","../node_modules/workbox-core/types.js","../node_modules/workbox-expiration/CacheExpiration.js","../node_modules/workbox-expiration/ExpirationPlugin.js","../node_modules/workbox-expiration/_version.js","../node_modules/workbox-expiration/index.js","../node_modules/workbox-expiration/models/CacheTimestampsModel.js","../node_modules/workbox-precaching/PrecacheController.js","../node_modules/workbox-precaching/PrecacheFallbackPlugin.js","../node_modules/workbox-precaching/PrecacheRoute.js","../node_modules/workbox-precaching/PrecacheStrategy.js","../node_modules/workbox-precaching/_types.js","../node_modules/workbox-precaching/_version.js","../node_modules/workbox-precaching/addPlugins.js","../node_modules/workbox-precaching/addRoute.js","../node_modules/workbox-precaching/cleanupOutdatedCaches.js","../node_modules/workbox-precaching/createHandlerBoundToURL.js","../node_modules/workbox-precaching/getCacheKeyForURL.js","../node_modules/workbox-precaching/index.js","../node_modules/workbox-precaching/matchPrecache.js","../node_modules/workbox-precaching/precache.js","../node_modules/workbox-precaching/precacheAndRoute.js","../node_modules/workbox-precaching/utils/PrecacheCacheKeyPlugin.js","../node_modules/workbox-precaching/utils/PrecacheInstallReportPlugin.js","../node_modules/workbox-precaching/utils/createCacheKey.js","../node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","../node_modules/workbox-precaching/utils/generateURLVariations.js","../node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","../node_modules/workbox-precaching/utils/printCleanupDetails.js","../node_modules/workbox-precaching/utils/printInstallDetails.js","../node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","../node_modules/workbox-routing/NavigationRoute.js","../node_modules/workbox-routing/RegExpRoute.js","../node_modules/workbox-routing/Route.js","../node_modules/workbox-routing/Router.js","../node_modules/workbox-routing/_version.js","../node_modules/workbox-routing/index.js","../node_modules/workbox-routing/registerRoute.js","../node_modules/workbox-routing/setCatchHandler.js","../node_modules/workbox-routing/setDefaultHandler.js","../node_modules/workbox-routing/utils/constants.js","../node_modules/workbox-routing/utils/getOrCreateDefaultRouter.js","../node_modules/workbox-routing/utils/normalizeHandler.js","../node_modules/workbox-strategies/CacheFirst.js","../node_modules/workbox-strategies/CacheOnly.js","../node_modules/workbox-strategies/NetworkFirst.js","../node_modules/workbox-strategies/NetworkOnly.js","../node_modules/workbox-strategies/StaleWhileRevalidate.js","../node_modules/workbox-strategies/Strategy.js","../node_modules/workbox-strategies/StrategyHandler.js","../node_modules/workbox-strategies/_version.js","../node_modules/workbox-strategies/index.js","../node_modules/workbox-strategies/plugins/cacheOkAndOpaquePlugin.js","../node_modules/workbox-strategies/utils/messages.js","../node_modules/idb/build/index.js","../node_modules/idb/build/wrap-idb-value.js","../node_modules/workbox-core/index.mjs","../node_modules/workbox-expiration/index.mjs","../node_modules/workbox-precaching/index.mjs","../node_modules/workbox-routing/index.mjs","../node_modules/workbox-strategies/index.mjs","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","service-worker.ts"],"names":["assert","cacheNames","cacheMatchIgnoreParams","canConstructReadableStream","canConstructResponseFromBodyStream","dontWaitFor","Deferred","executeQuotaErrorCallbacks","getFriendlyURL","logger","resultingClientExists","timeout","waitUntil","WorkboxError","constructor","promise","Promise","resolve","reject","messageGenerator","Error","errorCode","details","message","name","isArray","value","Array","hasMethod","object","expectedMethod","type","isType","expectedType","isInstance","expectedClass","isOneOf","validValues","includes","concat","JSON","stringify","isArrayOfClass","error","item","finalAssertExports","process","env","NODE_ENV","stripParams","fullURL","ignoreParams","strippedURL","URL","param","searchParams","delete","href","cache","request","matchOptions","strippedRequestURL","url","match","keysOptions","Object","assign","ignoreSearch","cacheKeys","keys","cacheKey","strippedCacheKeyURL","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","length","join","eachCacheNameDetail","fn","key","updateDetails","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","supportStatus","undefined","ReadableStream","start","testResponse","Response","body","then","quotaErrorCallbacks","log","size","callback","urlObj","String","location","replace","RegExp","origin","globalThis","self","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","warn","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","_len","arguments","_key","MAX_RETRY_TIME","resultingClientId","existingWindows","clients","matchAll","existingWindowIds","Set","map","w","id","resultingWindow","startTime","performance","now","find","has","ms","setTimeout","event","asyncFn","returnPromise","_","e","_cacheNames","clientsClaim","addEventListener","claim","copyResponse","response","modifier","responseURL","clonedResponse","clone","responseInit","headers","Headers","status","statusText","modifiedResponseInit","blob","registerQuotaErrorCallback","_private","setCacheNameDetails","skipWaiting","messages","fallback","code","msg","generatorFunction","_ref","paramName","validValueDescription","_ref2","moduleName","className","funcName","_ref3","classNameStr","_ref4","expectedClassName","isReturnValueProblem","_ref5","_ref6","entry","_ref7","firstEntry","secondEntry","_ref8","thrownErrorMessage","_ref9","cacheNameId","_ref10","unregister-route-route-not-registered","_ref11","_ref12","_ref13","methodName","_ref14","_ref15","_ref16","_ref17","_ref18","channel-name-required","invalid-responses-are-same-args","expire-custom-caches-only","_ref19","normalizedRangeHeader","_ref20","_ref21","no-range-header","_ref22","end","_ref23","_ref24","_ref25","_ref26","_ref27","_ref28","_ref29","_ref30","_ref31","add","forEach","CacheTimestampsModel","CacheExpiration","config","_isRunning","_rerunRequested","maxEntries","maxAgeSeconds","_maxEntries","_maxAgeSeconds","_matchOptions","_cacheName","_timestampModel","expireEntries","minTimestamp","Date","urlsExpired","caches","open","updateTimestamp","setTimestamp","isURLExpired","timestamp","getTimestamp","expireOlderThan","Infinity","ExpirationPlugin","cachedResponseWillBeUsed","cachedResponse","isFresh","_isResponseDateFresh","cacheExpiration","_getCacheExpiration","updateTimestampDone","cacheDidUpdate","Request","_config","_cacheExpirations","Map","purgeOnQuotaError","deleteCacheAndMetadata","get","set","dateHeaderTimestamp","_getDateHeaderTimestamp","dateHeader","parsedDate","headerTime","getTime","isNaN","openDB","deleteDB","DB_NAME","CACHE_OBJECT_STORE","normalizeURL","unNormalizedUrl","hash","_db","_upgradeDb","db","objStore","createObjectStore","keyPath","createIndex","unique","_upgradeDbAndDeleteOldDbs","_getId","getDb","tx","transaction","durability","store","put","done","maxCount","cursor","index","openCursor","entriesToDelete","entriesNotDeletedCount","result","push","continue","urlsDeleted","upgrade","bind","createCacheKey","PrecacheInstallReportPlugin","PrecacheCacheKeyPlugin","printCleanupDetails","printInstallDetails","PrecacheStrategy","PrecacheController","plugins","fallbackToNetwork","_urlsToCacheKeys","_urlsToCacheModes","_cacheKeysToIntegrities","_strategy","precacheController","install","activate","strategy","entries","addToCacheList","_installAndActiveListenersAdded","urlsToWarnAbout","revision","cacheMode","integrity","warningMessage","installReportPlugin","credentials","all","handleAll","params","updatedURLs","notUpdatedURLs","currentlyCachedRequests","expectedCacheKeys","values","deletedURLs","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","urlObject","getIntegrityForCacheKey","matchPrecache","createHandlerBoundToURL","options","handle","getOrCreatePrecacheController","PrecacheFallbackPlugin","fallbackURL","handlerDidError","_precacheController","_fallbackURL","Route","generateURLVariations","PrecacheRoute","urlsToCacheKeys","possibleURL","Strategy","_fallbackToNetwork","copyRedirectedCacheableResponsesPlugin","_handle","handler","cacheMatch","_handleInstall","_handleFetch","integrityInManifest","integrityInRequest","noIntegrityConflict","fetch","mode","_useDefaultCacheabilityPluginIfNeeded","wasCached","cachePut","getCacheKey","defaultPluginIndex","cacheWillUpdatePluginCount","plugin","defaultPrecacheCacheabilityPlugin","cacheWillUpdate","splice","redirected","addPlugins","registerRoute","addRoute","precacheRoute","deleteOutdatedCaches","cleanupOutdatedCaches","cachesDeleted","precacheAndRoute","cacheKeyWillBeUsed","handlerWillStart","state","originalRequest","REVISION_SEARCH_PARAM","cacheKeyURL","originalURL","SUBSTRING_TO_FIND","currentPrecacheName","substringToFind","cacheNamesToDelete","removeIgnoredSearchParams","ignoreURLParametersMatching","directoryIndex","cleanURLs","urlManipulation","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","logGroup","groupTitle","deletionCount","_nestedGroup","urls","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","some","regExp","NavigationRoute","allowlist","denylist","_match","_allowlist","_denylist","pathnameAndSearch","search","toString","RegExpRoute","exec","slice","defaultMethod","validMethods","normalizeHandler","setCatchHandler","catchHandler","Router","_routes","_defaultHandlerMap","routes","addFetchListener","responsePromise","handleRequest","respondWith","addCacheListener","data","payload","urlsToCache","requestPromises","ports","postMessage","protocol","startsWith","sameOrigin","route","findMatchingRoute","debugMessages","err","_catchHandler","catch","catchErr","matchResult","setDefaultHandler","unregisterRoute","routeIndex","indexOf","getOrCreateDefaultRouter","capture","captureUrl","valueToCheck","wildcards","matchCallback","defaultRouter","CacheFirst","logs","fetchAndCachePut","strategyStart","printFinalResponse","CacheOnly","cacheOkAndOpaquePlugin","NetworkFirst","p","unshift","_networkTimeoutSeconds","networkTimeoutSeconds","promises","timeoutId","_getTimeoutPromise","networkPromise","_getNetworkPromise","race","timeoutPromise","onNetworkTimeout","fetchError","clearTimeout","NetworkOnly","StaleWhileRevalidate","fetchAndCachePromise","StrategyHandler","fetchOptions","responseDone","FetchEvent","_getResponse","handlerDone","_awaitComplete","runCallbacks","iterateCallbacks","doneWaiting","waitUntilError","destroy","toRequest","input","_cacheKeys","ExtendableEvent","_handlerDeferred","_extendLifetimePromises","_plugins","_pluginStateMap","preloadResponse","possiblePreloadResponse","hasCallback","cb","pluginFilteredRequest","fetchResponse","responseClone","effectiveRequest","multiMatchOptions","vary","responseToCache","_ensureResponseSafeToCache","hasCacheUpdateCallback","oldResponse","newResponse","statefulCallback","statefulParam","shift","pluginsUsed","strategyName","wrap","r","replaceTraps","u","unwrap","version","blocked","blocking","terminated","indexedDB","openPromise","oldVersion","newVersion","deleteDatabase","readMethods","writeMethods","cachedMethods","getMethod","target","prop","IDBDatabase","targetFuncName","useIndex","isWrite","IDBIndex","IDBObjectStore","prototype","storeName","oldTraps","receiver","instanceOfAny","constructors","c","idbProxyableTypes","cursorAdvanceMethods","getIdbProxyableTypes","IDBCursor","IDBTransaction","getCursorAdvanceMethods","advance","continuePrimaryKey","cursorRequestMap","WeakMap","transactionDoneMap","transactionStoreNamesMap","transformCache","reverseTransformCache","promisifyRequest","unlisten","removeEventListener","success","cacheDonePromiseForTransaction","complete","DOMException","idbProxyTraps","objectStoreNames","objectStore","wrapFunction","func","storeNames","call","sort","_len2","_key2","apply","_len3","_key3","transformCachableValue","Proxy","IDBRequest","newValue","a","i","__WB_MANIFEST","fileExtensionRegexp","_a","PUBLIC_URL"],"mappings":"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E;MAC3B,OAAQ,GAAA,MAAA,CAAG,OAAO,yFACc;IACpC;IACA,UAAA,MAAA,CAAU,OAAO;EACrB;AACJ,CAAC;;;;;;;;;;;;;ACnOD;AACA;AACA;AACA;AACA;AACA;AACA;AACwB;AACxB;AACA;AACA;AACA,MAAM,mBAAmB,GAAG,IAAI,GAAG,CAAC,CAAC;;;;;;;;;;;;;;;;;ACXrC;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACA;AACwB;AAC/C;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,0BAA0B,CAAC,QAAQ,EAAE;EAC1C,IAAI,KAAqC,EAAE,EAM1C;EACD,+EAAmB,CAAC,GAAG,CAAC,QAAQ,CAAC;EACjC,IAAI,KAAqC,EAAE,EAE1C;AACL;;;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACQ;AACI;AACnC;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAmB,CAAC,OAAO,EAAE;EAClC,IAAI,KAAqC,EAAE,EA2B1C;EACD,8DAAU,CAAC,aAAa,CAAC,OAAO,CAAC;AACrC;;;;;;;;;;;;;;;AC1DA;AACA;AACA;AACA;AACA;AACA;AACA;AAC8C;AACvB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,WAAW,CAAA,EAAG;EACnB;EACA;EACA,IAAI,KAAqC,EAAE,EAI1C;EACD,KAAK,IAAI,CAAC,WAAW,CAAC,CAAC;AAC3B;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACU;AACV;AACY;AACG;AACjD;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,CAAC;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAW,CAAC,SAAS,EAAe;IAAA,IAA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EAAE;MACX,MAAM,IAAI,8EAAY,CAAC,aAAa,EAAE;QAAE,GAAG,EAAE,OAAO,CAAC,GAAG;QAAE;MAAM,CAAC,CAAC;IACtE;IACA,OAAO,QAAQ;EACnB;AACJ;;;;;;;;;;;;;;;;;;;ACpHA;AACA;AACA;AACA;AACA;AACA;AACA;AACiE;AACI;AACZ;AACgB;AAClB;AAChC;AACvB;AACA;AACA;AACA;AACA;AACA,MAAM,QAAQ,CAAC;EACX;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAW,CAAA,EAAe;IAAA,IAAd,OAAO,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;IACpB;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAC,SAAS,GAAG,0EAAU,CAAC,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC;IAC7D;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE;IACpC;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;IACxC;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC,YAAY;EAC5C;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,CAAC,OAAO,EAAE;IACZ,MAAM,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;IAC9C,OAAO,YAAY;EACvB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,CAAC,OAAO,EAAE;IACf;IACA,IAAI,OAAO,YAAY,UAAU,EAAE;MAC/B,OAAO,GAAG;QACN,KAAK,EAAE,OAAO;QACd,OAAO,EAAE,OAAO,CAAC;MACrB,CAAC;IACL;IACA,MAAM,KAAK,GAAG,OAAO,CAAC,KAAK;IAC3B,MAAM,OAAO,GAAG,OAAO,OAAO,CAAC,OAAO,KAAK,QAAQ,GAC7C,IAAI,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,GAC5B,OAAO,CAAC,OAAO;IACrB,MAAM,MAAM,GAAG,QAAQ,IAAI,OAAO,GAAG,OAAO,CAAC,MAAM,GAAG,SAAS;IAC/D,MAAM,OAAO,GAAG,IAAI,gEAAe,CAAC,IAAI,EAAE;MAAE,KAAK;MAAE,OAAO;MAAE;IAAO,CAAC,CAAC;IACrE,MAAM,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;IAC/D,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;IAC9E;IACA,OAAO,CAAC,YAAY,EAAE,WAAW,CAAC;EACtC;EACA,MAAM,YAAY,CAAC,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IACxC,MAAM,OAAO,CAAC,YAAY,CAAC,kBAAkB,EAAE;MAAE,KAAK;MAAE;IAAQ,CAAC,CAAC;IAClE,IAAI,QAAQ,GAAG,SAAS;IACxB,IAAI;MACA,QAAQ,GAAG,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC;MAC/C;MACA;MACA;MACA,IAAI,CAAC,QAAQ,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,EAAE;QACxC,MAAM,IAAI,8EAAY,CAAC,aAAa,EAAE;UAAE,GAAG,EAAE,OAAO,CAAC;QAAI,CAAC,CAAC;MAC/D;IACJ,CAAC,CACD,OAAO,KAAK,EAAE;MACV,IAAI,KAAK,YAAY,KAAK,EAAE;QACxB,KAAK,MAAM,QAAQ,IAAI,OAAO,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;UAChE,QAAQ,GAAG,MAAM,QAAQ,CAAC;YAAE,KAAK;YAAE,KAAK;YAAE;UAAQ,CAAC,CAAC;UACpD,IAAI,QAAQ,EAAE;YACV;UACJ;QACJ;MACJ;MACA,IAAI,CAAC,QAAQ,EAAE;QACX,MAAM,KAAK;MACf,CAAC,MACI,IAAI,KAAqC,EAAE,EAI/C;IACL;IACA,KAAK,MAAM,QAAQ,IAAI,OAAO,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE;MACnE,QAAQ,GAAG,MAAM,QAAQ,CAAC;QAAE,KAAK;QAAE,OAAO;QAAE;MAAS,CAAC,CAAC;IAC3D;IACA,OAAO,QAAQ;EACnB;EACA,MAAM,cAAc,CAAC,YAAY,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE;IACxD,IAAI,QAAQ;IACZ,IAAI,KAAK;IACT,IAAI;MACA,QAAQ,GAAG,MAAM,YAAY;IACjC,CAAC,CACD,OAAO,KAAK,EAAE;MACV;MACA;MACA;IAAA;IAEJ,IAAI;MACA,MAAM,OAAO,CAAC,YAAY,CAAC,mBAAmB,EAAE;QAC5C,KAAK;QACL,OAAO;QACP;MACJ,CAAC,CAAC;MACF,MAAM,OAAO,CAAC,WAAW,CAAC,CAAC;IAC/B,CAAC,CACD,OAAO,cAAc,EAAE;MACnB,IAAI,cAAc,YAAY,KAAK,EAAE;QACjC,KAAK,GAAG,cAAc;MAC1B;IACJ;IACA,MAAM,OAAO,CAAC,YAAY,CAAC,oBAAoB,EAAE;MAC7C,KAAK;MACL,OAAO;MACP,QAAQ;MACR,KAAK,EAAE;IACX,CAAC,CAAC;IACF,OAAO,CAAC,OAAO,CAAC,CAAC;IACjB,IAAI,KAAK,EAAE;MACP,MAAM,KAAK;IACf;EACJ;AACJ;AACoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACnOA;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACgC;AAC5B;AACoC;AACxB;AAChB;AACE;AACU;AAC9C;AACvB,SAAS,SAAS,CAAC,KAAK,EAAE;EACtB,OAAO,OAAO,KAAK,KAAK,QAAQ,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,KAAK;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM,eAAe,CAAC;EAClB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,WAAW,CAAC,QAAQ,EAAE,OAAO,EAAE;IAC3B,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;IACpB;AACR;AACA;AACA;AACA;AACA;AACA;AACA;IACQ;AACR;AACA;AACA;AACA;AACA;AACA;IACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,KAAqC,EAAE,EAO1C;IACD,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC;IAC5B,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK;IAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ;IACzB,IAAI,CAAC,gBAAgB,GAAG,IAAI,sEAAQ,CAAC,CAAC;IACtC,IAAI,CAAC,uBAAuB,GAAG,EAAE;IACjC;IACA;IACA,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC;IACrC,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,CAAC,CAAC;IAChC,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,QAAQ,EAAE;MAChC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACxC;IACA,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;EACvD;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,KAAK,CAAC,KAAK,EAAE;IACf,MAAM;MAAE;IAAM,CAAC,GAAG,IAAI;IACtB,IAAI,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC;IAC9B,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,IAC3B,KAAK,YAAY,UAAU,IAC3B,KAAK,CAAC,eAAe,EAAE;MACvB,MAAM,uBAAuB,GAAI,MAAM,KAAK,CAAC,eAAgB;MAC7D,IAAI,uBAAuB,EAAE;QACzB,IAAI,KAAqC,EAAE,EAG1C;QACD,OAAO,uBAAuB;MAClC;IACJ;IACA;IACA;IACA;IACA,MAAM,eAAe,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,GAClD,OAAO,CAAC,KAAK,CAAC,CAAC,GACf,IAAI;IACV,IAAI;MACA,KAAK,MAAM,EAAE,IAAI,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,EAAE;QACxD,OAAO,GAAG,MAAM,EAAE,CAAC;UAAE,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;UAAE;QAAM,CAAC,CAAC;MAC3D;IACJ,CAAC,CACD,OAAO,GAAG,EAAE;MACR,IAAI,GAAG,YAAY,KAAK,EAAE;QACtB,MAAM,IAAI,8EAAY,CAAC,iCAAiC,EAAE;UACtD,kBAAkB,EAAE,GAAG,CAAC;QAC5B,CAAC,CAAC;MACN;IACJ;IACA;IACA;IACA;IACA,MAAM,qBAAqB,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAC7C,IAAI;MACA,IAAI,aAAa;MACjB;MACA,aAAa,GAAG,MAAM,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,KAAK,UAAU,GAAG,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;MAC3G,IAAI,KAAqC,EAAE,EAI1C;MACD,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;QAC7D,aAAa,GAAG,MAAM,QAAQ,CAAC;UAC3B,KAAK;UACL,OAAO,EAAE,qBAAqB;UAC9B,QAAQ,EAAE;QACd,CAAC,CAAC;MACN;MACA,OAAO,aAAa;IACxB,CAAC,CACD,OAAO,KAAK,EAAE;MACV,IAAI,KAAqC,EAAE,EAG1C;MACD;MACA;MACA,IAAI,eAAe,EAAE;QACjB,MAAM,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE;UACpC,KAAK,EAAE,KAAK;UACZ,KAAK;UACL,eAAe,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;UACxC,OAAO,EAAE,qBAAqB,CAAC,KAAK,CAAC;QACzC,CAAC,CAAC;MACN;MACA,MAAM,KAAK;IACf;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,gBAAgB,CAAC,KAAK,EAAE;IAC1B,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;IACxC,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;IACtC,KAAK,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;IACxD,OAAO,QAAQ;EACnB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,UAAU,CAAC,GAAG,EAAE;IAClB,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC;IAC9B,IAAI,cAAc;IAClB,MAAM;MAAE,SAAS;MAAE;IAAa,CAAC,GAAG,IAAI,CAAC,SAAS;IAClD,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,MAAM,CAAC;IAChE,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,YAAY,CAAC,EAAE;MAAE;IAAU,CAAC,CAAC;IACvF,cAAc,GAAG,MAAM,MAAM,CAAC,KAAK,CAAC,gBAAgB,EAAE,iBAAiB,CAAC;IACxE,IAAI,KAAqC,EAAE,EAO1C;IACD,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,0BAA0B,CAAC,EAAE;MACtE,cAAc,GACV,CAAC,MAAM,QAAQ,CAAC;QACZ,SAAS;QACT,YAAY;QACZ,cAAc;QACd,OAAO,EAAE,gBAAgB;QACzB,KAAK,EAAE,IAAI,CAAC;MAChB,CAAC,CAAC,KAAK,SAAS;IACxB;IACA,OAAO,cAAc;EACzB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,QAAQ,CAAC,GAAG,EAAE,QAAQ,EAAE;IAC1B,MAAM,OAAO,GAAG,SAAS,CAAC,GAAG,CAAC;IAC9B;IACA;IACA,MAAM,wEAAO,CAAC,CAAC,CAAC;IAChB,MAAM,gBAAgB,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,CAAC;IACjE,IAAI,KAAqC,EAAE,EAe1C;IACD,IAAI,CAAC,QAAQ,EAAE;MACX,IAAI,KAAqC,EAAE,EAG1C;MACD,MAAM,IAAI,8EAAY,CAAC,4BAA4B,EAAE;QACjD,GAAG,EAAE,sFAAc,CAAC,gBAAgB,CAAC,GAAG;MAC5C,CAAC,CAAC;IACN;IACA,MAAM,eAAe,GAAG,MAAM,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC;IACvE,IAAI,CAAC,eAAe,EAAE;MAClB,IAAI,KAAqC,EAAE,EAG1C;MACD,OAAO,KAAK;IAChB;IACA,MAAM;MAAE,SAAS;MAAE;IAAa,CAAC,GAAG,IAAI,CAAC,SAAS;IAClD,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC/C,MAAM,sBAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;IACjE,MAAM,WAAW,GAAG,sBAAsB,GACpC,MAAM,sGAAsB;IAC9B;IACA;IACA;IACA,KAAK,EAAE,gBAAgB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,iBAAiB,CAAC,EAAE,YAAY,CAAC,GACjE,IAAI;IACV,IAAI,KAAqC,EAAE,EAG1C;IACD,IAAI;MACA,MAAM,KAAK,CAAC,GAAG,CAAC,gBAAgB,EAAE,sBAAsB,GAAG,eAAe,CAAC,KAAK,CAAC,CAAC,GAAG,eAAe,CAAC;IACzG,CAAC,CACD,OAAO,KAAK,EAAE;MACV,IAAI,KAAK,YAAY,KAAK,EAAE;QACxB;QACA,IAAI,KAAK,CAAC,IAAI,KAAK,oBAAoB,EAAE;UACrC,MAAM,8GAA0B,CAAC,CAAC;QACtC;QACA,MAAM,KAAK;MACf;IACJ;IACA,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,EAAE;MAC5D,MAAM,QAAQ,CAAC;QACX,SAAS;QACT,WAAW;QACX,WAAW,EAAE,eAAe,CAAC,KAAK,CAAC,CAAC;QACpC,OAAO,EAAE,gBAAgB;QACzB,KAAK,EAAE,IAAI,CAAC;MAChB,CAAC,CAAC;IACN;IACA,OAAO,IAAI;EACf;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,WAAW,CAAC,OAAO,EAAE,IAAI,EAAE;IAC7B,MAAM,GAAG,MAAA,MAAA,CAAM,OAAO,CAAC,GAAG,SAAA,MAAA,CAAM,IAAI,CAAE;IACtC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;MACvB,IAAI,gBAAgB,GAAG,OAAO;MAC9B,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,EAAE;QAChE,gBAAgB,GAAG,SAAS,CAAC,MAAM,QAAQ,CAAC;UACxC,IAAI;UACJ,OAAO,EAAE,gBAAgB;UACzB,KAAK,EAAE,IAAI,CAAC,KAAK;UACjB;UACA,MAAM,EAAE,IAAI,CAAC,MAAM,CAAE;QACzB,CAAC,CAAC,CAAC;MACP;MACA,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,gBAAgB;IAC3C;IACA,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;EAC/B;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,WAAW,CAAC,IAAI,EAAE;IACd,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;MACzC,IAAI,IAAI,IAAI,MAAM,EAAE;QAChB,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,YAAY,CAAC,IAAI,EAAE,KAAK,EAAE;IAC5B,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE;MAChD;MACA;MACA,MAAM,QAAQ,CAAC,KAAK,CAAC;IACzB;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC,gBAAgB,CAAC,IAAI,EAAE;IACpB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;MACzC,IAAI,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,UAAU,EAAE;QACpC,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC;QAC9C,MAAM,gBAAgB,GAAI,KAAK,IAAK;UAChC,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,EAAE;YAAE;UAAM,CAAC,CAAC;UACxE;UACA;UACA,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,aAAa,CAAC;QACtC,CAAC;QACD,MAAM,gBAAgB;MAC1B;IACJ;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,SAAS,CAAC,OAAO,EAAE;IACf,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,OAAO,CAAC;IAC1C,OAAO,OAAO;EAClB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,WAAW,CAAA,EAAG;IAChB,IAAI,OAAO;IACX,OAAQ,OAAO,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,EAAG;MACrD,MAAM,OAAO;IACjB;EACJ;EACA;AACJ;AACA;AACA;EACI,OAAO,CAAA,EAAG;IACN,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC;EACvC;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,0BAA0B,CAAC,QAAQ,EAAE;IACvC,IAAI,eAAe,GAAG,QAAQ;IAC9B,IAAI,WAAW,GAAG,KAAK;IACvB,KAAK,MAAM,QAAQ,IAAI,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,EAAE;MAC7D,eAAe,GACX,CAAC,MAAM,QAAQ,CAAC;QACZ,OAAO,EAAE,IAAI,CAAC,OAAO;QACrB,QAAQ,EAAE,eAAe;QACzB,KAAK,EAAE,IAAI,CAAC;MAChB,CAAC,CAAC,KAAK,SAAS;MACpB,WAAW,GAAG,IAAI;MAClB,IAAI,CAAC,eAAe,EAAE;QAClB;MACJ;IACJ;IACA,IAAI,CAAC,WAAW,EAAE;MACd,IAAI,eAAe,IAAI,eAAe,CAAC,MAAM,KAAK,GAAG,EAAE;QACnD,eAAe,GAAG,SAAS;MAC/B;MACA,IAAI,KAAqC,EAAE,EAe1C;IACL;IACA,OAAO,eAAe;EAC1B;AACJ;;;;;;;;ACngBa;;AACb;AACA,IAAI;EACA,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,CAAC,CAAC;AAC3C,CAAC,CACD,OAAO,CAAC,EAAE,CAAE;;;;;;;;;;;;;;;;;;;;;;;;;;ACLZ;AACA;AACA;AACA;AACA;AACA;AACA;AAC6C;AACF;AACM;AACF;AACkB;AACxB;AACc;AAChC;AACvB;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACwB;AACjB,MAAM,sBAAsB,GAAG;EAClC;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,eAAe,EAAE,MAAA,IAAA,IAAwB;IAAA,IAAjB;MAAE;IAAS,CAAC,GAAA,IAAA;IAChC,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;MAClD,OAAO,QAAQ;IACnB;IACA,OAAO,IAAI;EACf;AACJ,CAAC;;;;;;;;;;;;;;;ACzBD;AACA;AACA;AACA;AACA;AACA;AACA;AACyD;AACgB;AACjD;AACjB,MAAM,QAAQ,GAAG;EACpB,aAAa,EAAE,CAAC,YAAY,EAAE,OAAO,cAAA,MAAA,CAAc,YAAY,sBAAA,MAAA,CAAmB,sFAAc,CAAC,OAAO,CAAC,GAAG,CAAC,MAAG;EAChH,kBAAkB,EAAG,QAAQ,IAAK;IAC9B,IAAI,QAAQ,EAAE;MACV,kEAAM,CAAC,cAAc,gCAAgC,CAAC;MACtD,kEAAM,CAAC,GAAG,CAAC,QAAQ,IAAI,wBAAwB,CAAC;MAChD,kEAAM,CAAC,QAAQ,CAAC,CAAC;IACrB;EACJ;AACJ,CAAC;;;;;;;;;;;;;;;ACnBkE;AACN;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,MAAM,CAAC,IAAI,EAAE,OAAO,EAAmD;EAAA,IAAjD;IAAE,OAAO;IAAE,OAAO;IAAE,QAAQ;IAAE;EAAW,CAAC,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;EAC1E,MAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;EAC7C,MAAM,WAAW,GAAG,qDAAI,CAAC,OAAO,CAAC;EACjC,IAAI,OAAO,EAAE;IACT,OAAO,CAAC,gBAAgB,CAAC,eAAe,EAAG,KAAK,IAAK;MACjD,OAAO,CAAC,qDAAI,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,qDAAI,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,KAAK,CAAC;IACvG,CAAC,CAAC;EACN;EACA,IAAI,OAAO,EAAE;IACT,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAG,KAAK,IAAK,OAAO;IACtD;IACA,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EAC/C;EACA,WAAW,CACN,IAAI,CAAE,EAAE,IAAK;IACd,IAAI,UAAU,EACV,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,MAAM,UAAU,CAAC,CAAC,CAAC;IACpD,IAAI,QAAQ,EAAE;MACV,EAAE,CAAC,gBAAgB,CAAC,eAAe,EAAG,KAAK,IAAK,QAAQ,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;IACxG;EACJ,CAAC,CAAC,CACG,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;EACrB,OAAO,WAAW;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,QAAQ,CAAC,IAAI,EAAoB;EAAA,IAAlB;IAAE;EAAQ,CAAC,GAAA,SAAA,CAAA,MAAA,QAAA,SAAA,QAAA,SAAA,GAAA,SAAA,MAAG,CAAC,CAAC;EACpC,MAAM,OAAO,GAAG,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC;EAC9C,IAAI,OAAO,EAAE;IACT,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAG,KAAK,IAAK,OAAO;IACtD;IACA,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;EAC7B;EACA,OAAO,qDAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,MAAM,SAAS,CAAC;AAC9C;AAEA,MAAM,WAAW,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,OAAO,CAAC;AACtE,MAAM,YAAY,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;AACtD,MAAM,aAAa,GAAG,IAAI,GAAG,CAAC,CAAC;AAC/B,SAAS,SAAS,CAAC,MAAM,EAAE,IAAI,EAAE;EAC7B,IAAI,EAAE,MAAM,YAAY,WAAW,IAC/B,EAAE,IAAI,IAAI,MAAM,CAAC,IACjB,OAAO,IAAI,KAAK,QAAQ,CAAC,EAAE;IAC3B;EACJ;EACA,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC,EACvB,OAAO,aAAa,CAAC,GAAG,CAAC,IAAI,CAAC;EAClC,MAAM,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;EACrD,MAAM,QAAQ,GAAG,IAAI,KAAK,cAAc;EACxC,MAAM,OAAO,GAAG,YAAY,CAAC,QAAQ,CAAC,cAAc,CAAC;EACrD;EACA;EACA,EAAE,cAAc,IAAI,CAAC,QAAQ,GAAG,QAAQ,GAAG,cAAc,EAAE,SAAS,CAAC,IACjE,EAAE,OAAO,IAAI,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,EAAE;IACpD;EACJ;EACA,MAAM,MAAM,GAAG,eAAA,CAAgB,SAAS,EAAW;IAC/C;IACA,MAAM,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,GAAG,WAAW,GAAG,UAAU,CAAC;IAC1E,IAAI,MAAM,GAAG,EAAE,CAAC,KAAK;IAAC,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAHmB,IAAI,OAAA,KAAA,CAAA,IAAA,OAAA,IAAA,WAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;MAAJ,IAAI,CAAA,IAAA,QAAA,SAAA,CAAA,IAAA;IAAA;IAI7C,IAAI,QAAQ,EACR,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACvC;IACA;IACA;IACA;IACA;IACA,OAAO,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CACtB,MAAM,CAAC,cAAc,CAAC,CAAC,GAAG,IAAI,CAAC,EAC/B,OAAO,IAAI,EAAE,CAAC,IAAI,CACrB,CAAC,EAAE,CAAC,CAAC;EACV,CAAC;EACD,aAAa,CAAC,GAAG,CAAC,IAAI,EAAE,MAAM,CAAC;EAC/B,OAAO,MAAM;AACjB;AACA,qDAAY,CAAE,QAAQ,KAAM;EACxB,GAAG,QAAQ;EACX,GAAG,EAAE,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,KAAK,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC;EAChG,GAAG,EAAE,CAAC,MAAM,EAAE,IAAI,KAAK,CAAC,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,QAAQ,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI;AACjF,CAAC,CAAC,CAAC;;;;;;;;;;;;;;;;AC5FH,MAAM,aAAa,GAAG,CAAC,MAAM,EAAE,YAAY,KAAK,YAAY,CAAC,IAAI,CAAE,CAAC,IAAK,MAAM,YAAY,CAAC,CAAC;AAE7F,IAAI,iBAAiB;AACrB,IAAI,oBAAoB;AACxB;AACA,SAAS,oBAAoB,CAAA,EAAG;EAC5B,OAAQ,iBAAiB,KACpB,iBAAiB,GAAG,CACjB,WAAW,EACX,cAAc,EACd,QAAQ,EACR,SAAS,EACT,cAAc,CACjB,CAAC;AACV;AACA;AACA,SAAS,uBAAuB,CAAA,EAAG;EAC/B,OAAQ,oBAAoB,KACvB,oBAAoB,GAAG,CACpB,SAAS,CAAC,SAAS,CAAC,OAAO,EAC3B,SAAS,CAAC,SAAS,CAAC,QAAQ,EAC5B,SAAS,CAAC,SAAS,CAAC,kBAAkB,CACzC,CAAC;AACV;AACA,MAAM,gBAAgB,GAAG,IAAI,OAAO,CAAC,CAAC;AACtC,MAAM,kBAAkB,GAAG,IAAI,OAAO,CAAC,CAAC;AACxC,MAAM,wBAAwB,GAAG,IAAI,OAAO,CAAC,CAAC;AAC9C,MAAM,cAAc,GAAG,IAAI,OAAO,CAAC,CAAC;AACpC,MAAM,qBAAqB,GAAG,IAAI,OAAO,CAAC,CAAC;AAC3C,SAAS,gBAAgB,CAAC,OAAO,EAAE;EAC/B,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;IAC7C,MAAM,QAAQ,GAAG,CAAA,KAAM;MACnB,OAAO,CAAC,mBAAmB,CAAC,SAAS,EAAE,OAAO,CAAC;MAC/C,OAAO,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC;IAC/C,CAAC;IACD,MAAM,OAAO,GAAG,CAAA,KAAM;MAClB,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;MAC7B,QAAQ,CAAC,CAAC;IACd,CAAC;IACD,MAAM,KAAK,GAAG,CAAA,KAAM;MAChB,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC;MACrB,QAAQ,CAAC,CAAC;IACd,CAAC;IACD,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC;IAC5C,OAAO,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC;EAC5C,CAAC,CAAC;EACF,OAAO,CACF,IAAI,CAAE,KAAK,IAAK;IACjB;IACA;IACA,IAAI,KAAK,YAAY,SAAS,EAAE;MAC5B,gBAAgB,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC;IACxC;IACA;EACJ,CAAC,CAAC,CACG,KAAK,CAAC,MAAM,CAAE,CAAC,CAAC;EACrB;EACA;EACA,qBAAqB,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC;EAC3C,OAAO,OAAO;AAClB;AACA,SAAS,8BAA8B,CAAC,EAAE,EAAE;EACxC;EACA,IAAI,kBAAkB,CAAC,GAAG,CAAC,EAAE,CAAC,EAC1B;EACJ,MAAM,IAAI,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;IAC1C,MAAM,QAAQ,GAAG,CAAA,KAAM;MACnB,EAAE,CAAC,mBAAmB,CAAC,UAAU,EAAE,QAAQ,CAAC;MAC5C,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC;MACtC,EAAE,CAAC,mBAAmB,CAAC,OAAO,EAAE,KAAK,CAAC;IAC1C,CAAC;IACD,MAAM,QAAQ,GAAG,CAAA,KAAM;MACnB,OAAO,CAAC,CAAC;MACT,QAAQ,CAAC,CAAC;IACd,CAAC;IACD,MAAM,KAAK,GAAG,CAAA,KAAM;MAChB,MAAM,CAAC,EAAE,CAAC,KAAK,IAAI,IAAI,YAAY,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;MAChE,QAAQ,CAAC,CAAC;IACd,CAAC;IACD,EAAE,CAAC,gBAAgB,CAAC,UAAU,EAAE,QAAQ,CAAC;IACzC,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC;IACnC,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,KAAK,CAAC;EACvC,CAAC,CAAC;EACF;EACA,kBAAkB,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC;AACpC;AACA,IAAI,aAAa,GAAG;EAChB,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE;IACxB,IAAI,MAAM,YAAY,cAAc,EAAE;MAClC;MACA,IAAI,IAAI,KAAK,MAAM,EACf,OAAO,kBAAkB,CAAC,GAAG,CAAC,MAAM,CAAC;MACzC;MACA,IAAI,IAAI,KAAK,kBAAkB,EAAE;QAC7B,OAAO,MAAM,CAAC,gBAAgB,IAAI,wBAAwB,CAAC,GAAG,CAAC,MAAM,CAAC;MAC1E;MACA;MACA,IAAI,IAAI,KAAK,OAAO,EAAE;QAClB,OAAO,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAC7B,SAAS,GACT,QAAQ,CAAC,WAAW,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;MAC5D;IACJ;IACA;IACA,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;EAC7B,CAAC;EACD,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE;IACrB,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK;IACpB,OAAO,IAAI;EACf,CAAC;EACD,GAAG,CAAC,MAAM,EAAE,IAAI,EAAE;IACd,IAAI,MAAM,YAAY,cAAc,KAC/B,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,OAAO,CAAC,EAAE;MACvC,OAAO,IAAI;IACf;IACA,OAAO,IAAI,IAAI,MAAM;EACzB;AACJ,CAAC;AACD,SAAS,YAAY,CAAC,QAAQ,EAAE;EAC5B,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC;AAC3C;AACA,SAAS,YAAY,CAAC,IAAI,EAAE;EACxB;EACA;EACA;EACA,IAAI,IAAI,KAAK,WAAW,CAAC,SAAS,CAAC,WAAW,IAC1C,EAAE,kBAAkB,IAAI,cAAc,CAAC,SAAS,CAAC,EAAE;IACnD,OAAO,UAAU,UAAU,EAAW;MAAA,SAAA,IAAA,GAAA,SAAA,CAAA,MAAA,EAAN,IAAI,OAAA,KAAA,CAAA,IAAA,OAAA,IAAA,WAAA,IAAA,MAAA,IAAA,GAAA,IAAA,EAAA,IAAA;QAAJ,IAAI,CAAA,IAAA,QAAA,SAAA,CAAA,IAAA;MAAA;MAChC,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC;MACvD,wBAAwB,CAAC,GAAG,CAAC,EAAE,EAAE,UAAU,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;MACpF,OAAO,IAAI,CAAC,EAAE,CAAC;IACnB,CAAC;EACL;EACA;EACA;EACA;EACA;EACA;EACA,IAAI,uBAAuB,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;IAC1C,OAAO,YAAmB;MAAA,SAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAN,IAAI,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,MAAA,KAAA,GAAA,KAAA,EAAA,KAAA;QAAJ,IAAI,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA;MAAA;MACpB;MACA;MACA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MAC9B,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IAC3C,CAAC;EACL;EACA,OAAO,YAAmB;IAAA,SAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAAN,IAAI,OAAA,KAAA,CAAA,KAAA,GAAA,KAAA,MAAA,KAAA,GAAA,KAAA,EAAA,KAAA;MAAJ,IAAI,CAAA,KAAA,IAAA,SAAA,CAAA,KAAA;IAAA;IACpB;IACA;IACA,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;EAC/C,CAAC;AACL;AACA,SAAS,sBAAsB,CAAC,KAAK,EAAE;EACnC,IAAI,OAAO,KAAK,KAAK,UAAU,EAC3B,OAAO,YAAY,CAAC,KAAK,CAAC;EAC9B;EACA;EACA,IAAI,KAAK,YAAY,cAAc,EAC/B,8BAA8B,CAAC,KAAK,CAAC;EACzC,IAAI,aAAa,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC,CAAC,EAC5C,OAAO,IAAI,KAAK,CAAC,KAAK,EAAE,aAAa,CAAC;EAC1C;EACA,OAAO,KAAK;AAChB;AACA,SAAS,IAAI,CAAC,KAAK,EAAE;EACjB;EACA;EACA,IAAI,KAAK,YAAY,UAAU,EAC3B,OAAO,gBAAgB,CAAC,KAAK,CAAC;EAClC;EACA;EACA,IAAI,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC,EACzB,OAAO,cAAc,CAAC,GAAG,CAAC,KAAK,CAAC;EACpC,MAAM,QAAQ,GAAG,sBAAsB,CAAC,KAAK,CAAC;EAC9C;EACA;EACA,IAAI,QAAQ,KAAK,KAAK,EAAE;IACpB,cAAc,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,CAAC;IACnC,qBAAqB,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC;EAC9C;EACA,OAAO,QAAQ;AACnB;AACA,MAAM,MAAM,GAAI,KAAK,IAAK,qBAAqB,CAAC,GAAG,CAAC,KAAK,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCtL1D;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAE4C;AACU;AACyB;AAC/B;AACU;AAI1D,0DAAY,EAAE;AAEd;AACA;AACA;AACA;AACA,oEAAgB,CAAC,iLAAI,CAAC,aAAa,CAAC;AAEpC;AACA;AACA;AACA,IAAM,mBAAmB,GAAG,IAAI,MAAM,CAAC,kBAAkB,CAAC;AAC1D,8DAAa;AACX;AACA,UAAC,EAAgD;MAA9C,OAAO,GAAA,EAAA,CAAA,OAAA;IAAE,GAAG,GAAA,EAAA,CAAA,GAAA;EACb;EACA,IAAI,OAAO,CAAC,IAAI,KAAK,UAAU,EAAE;IAC/B,OAAO,KAAK;;EAGd;EACA,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;IACjC,OAAO,KAAK;;EAGd;EACA;EACA,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,mBAAmB,CAAC,EAAE;IAC3C,OAAO,KAAK;;EAGd;EACA,OAAO,IAAI;AACb,CAAC,EACD,2EAAuB,CAAC,EAAsB,GAAG,aAAa,CAAC,CAChE;AAED;AACA;AACA,8DAAa;AACX;AACA,UAAC,EAAO;MAAL,GAAG,GAAA,EAAA,CAAA,GAAA;EAAO,OAAA,GAAG,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC;AAApE,CAAoE;AACjF;AACA,IAAI,oEAAoB,CAAC;EACvB,SAAS,EAAE,QAAQ;EACnB,OAAO,EAAE;EACP;EACA;EACA,IAAI,gEAAgB,CAAC;IAAE,UAAU,EAAE;EAAE,CAAE,CAAC;CAE3C,CAAC,CACH;AAED;AACA;AACA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,UAAC,KAAK;EACrC,IAAI,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,IAAI,KAAK,cAAc,EAAE;IACpD,IAAI,CAAC,WAAW,EAAE;;AAEtB,CAAC,CAAC;AAEF","file":"service-worker.js","sourceRoot":"","sourcesContent":["/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\n// We either expose defaults or we expose every named export.\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { cacheMatchIgnoreParams } from './_private/cacheMatchIgnoreParams.js';\nimport { canConstructReadableStream } from './_private/canConstructReadableStream.js';\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { dontWaitFor } from './_private/dontWaitFor.js';\nimport { Deferred } from './_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from './_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from './_private/getFriendlyURL.js';\nimport { logger } from './_private/logger.js';\nimport { resultingClientExists } from './_private/resultingClientExists.js';\nimport { timeout } from './_private/timeout.js';\nimport { waitUntil } from './_private/waitUntil.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\nexport { assert, cacheMatchIgnoreParams, cacheNames, canConstructReadableStream, canConstructResponseFromBodyStream, dontWaitFor, Deferred, executeQuotaErrorCallbacks, getFriendlyURL, logger, resultingClientExists, timeout, waitUntil, WorkboxError, };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The Deferred class composes Promises in a way that allows for them to be\n * resolved or rejected from outside the constructor. In most cases promises\n * should be used directly, but Deferreds can be necessary when the logic to\n * resolve a promise must be separate.\n *\n * @private\n */\nclass Deferred {\n    /**\n     * Creates a promise and exposes its resolve and reject functions as methods.\n     */\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.resolve = resolve;\n            this.reject = reject;\n        });\n    }\n}\nexport { Deferred };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\nimport '../_version.js';\n/**\n * Workbox errors should be thrown with this class.\n * This allows use to ensure the type easily in tests,\n * helps developers identify errors from workbox\n * easily and allows use to optimise error\n * messages correctly.\n *\n * @private\n */\nclass WorkboxError extends Error {\n    /**\n     *\n     * @param {string} errorCode The error code that\n     * identifies this particular error.\n     * @param {Object=} details Any relevant arguments\n     * that will help developers identify issues should\n     * be added as a key on the context object.\n     */\n    constructor(errorCode, details) {\n        const message = messageGenerator(errorCode, details);\n        super(message);\n        this.name = errorCode;\n        this.details = details;\n    }\n}\nexport { WorkboxError };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from '../_private/WorkboxError.js';\nimport '../_version.js';\n/*\n * This method throws if the supplied value is not an array.\n * The destructed values are required to produce a meaningful error for users.\n * The destructed and restructured object is so it's clear what is\n * needed.\n */\nconst isArray = (value, details) => {\n    if (!Array.isArray(value)) {\n        throw new WorkboxError('not-an-array', details);\n    }\n};\nconst hasMethod = (object, expectedMethod, details) => {\n    const type = typeof object[expectedMethod];\n    if (type !== 'function') {\n        details['expectedMethod'] = expectedMethod;\n        throw new WorkboxError('missing-a-method', details);\n    }\n};\nconst isType = (object, expectedType, details) => {\n    if (typeof object !== expectedType) {\n        details['expectedType'] = expectedType;\n        throw new WorkboxError('incorrect-type', details);\n    }\n};\nconst isInstance = (object, \n// Need the general type to do the check later.\n// eslint-disable-next-line @typescript-eslint/ban-types\nexpectedClass, details) => {\n    if (!(object instanceof expectedClass)) {\n        details['expectedClassName'] = expectedClass.name;\n        throw new WorkboxError('incorrect-class', details);\n    }\n};\nconst isOneOf = (value, validValues, details) => {\n    if (!validValues.includes(value)) {\n        details['validValueDescription'] = `Valid values are ${JSON.stringify(validValues)}.`;\n        throw new WorkboxError('invalid-value', details);\n    }\n};\nconst isArrayOfClass = (value, \n// Need general type to do check later.\nexpectedClass, // eslint-disable-line\ndetails) => {\n    const error = new WorkboxError('not-array-of-class', details);\n    if (!Array.isArray(value)) {\n        throw error;\n    }\n    for (const item of value) {\n        if (!(item instanceof expectedClass)) {\n            throw error;\n        }\n    }\n};\nconst finalAssertExports = process.env.NODE_ENV === 'production'\n    ? null\n    : {\n        hasMethod,\n        isArray,\n        isInstance,\n        isOneOf,\n        isType,\n        isArrayOfClass,\n    };\nexport { finalAssertExports as assert };\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nfunction stripParams(fullURL, ignoreParams) {\n    const strippedURL = new URL(fullURL);\n    for (const param of ignoreParams) {\n        strippedURL.searchParams.delete(param);\n    }\n    return strippedURL.href;\n}\n/**\n * Matches an item in the cache, ignoring specific URL params. This is similar\n * to the `ignoreSearch` option, but it allows you to ignore just specific\n * params (while continuing to match on the others).\n *\n * @private\n * @param {Cache} cache\n * @param {Request} request\n * @param {Object} matchOptions\n * @param {Array<string>} ignoreParams\n * @return {Promise<Response|undefined>}\n */\nasync function cacheMatchIgnoreParams(cache, request, ignoreParams, matchOptions) {\n    const strippedRequestURL = stripParams(request.url, ignoreParams);\n    // If the request doesn't include any ignored params, match as normal.\n    if (request.url === strippedRequestURL) {\n        return cache.match(request, matchOptions);\n    }\n    // Otherwise, match by comparing keys\n    const keysOptions = Object.assign(Object.assign({}, matchOptions), { ignoreSearch: true });\n    const cacheKeys = await cache.keys(request, keysOptions);\n    for (const cacheKey of cacheKeys) {\n        const strippedCacheKeyURL = stripParams(cacheKey.url, ignoreParams);\n        if (strippedRequestURL === strippedCacheKeyURL) {\n            return cache.match(cacheKey, matchOptions);\n        }\n    }\n    return;\n}\nexport { cacheMatchIgnoreParams };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst _cacheNameDetails = {\n    googleAnalytics: 'googleAnalytics',\n    precache: 'precache-v2',\n    prefix: 'workbox',\n    runtime: 'runtime',\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\n};\nconst _createCacheName = (cacheName) => {\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\n        .filter((value) => value && value.length > 0)\n        .join('-');\n};\nconst eachCacheNameDetail = (fn) => {\n    for (const key of Object.keys(_cacheNameDetails)) {\n        fn(key);\n    }\n};\nexport const cacheNames = {\n    updateDetails: (details) => {\n        eachCacheNameDetail((key) => {\n            if (typeof details[key] === 'string') {\n                _cacheNameDetails[key] = details[key];\n            }\n        });\n    },\n    getGoogleAnalyticsName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\n    },\n    getPrecacheName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\n    },\n    getPrefix: () => {\n        return _cacheNameDetails.prefix;\n    },\n    getRuntimeName: (userCacheName) => {\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\n    },\n    getSuffix: () => {\n        return _cacheNameDetails.suffix;\n    },\n};\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a [`ReadableStream`](https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream)\n * object.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `ReadableStream`, `false` otherwise.\n *\n * @private\n */\nfunction canConstructReadableStream() {\n    if (supportStatus === undefined) {\n        // See https://github.com/GoogleChrome/workbox/issues/1473\n        try {\n            new ReadableStream({ start() { } });\n            supportStatus = true;\n        }\n        catch (error) {\n            supportStatus = false;\n        }\n    }\n    return supportStatus;\n}\nexport { canConstructReadableStream };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nlet supportStatus;\n/**\n * A utility function that determines whether the current browser supports\n * constructing a new `Response` from a `response.body` stream.\n *\n * @return {boolean} `true`, if the current browser can successfully\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\n *\n * @private\n */\nfunction canConstructResponseFromBodyStream() {\n    if (supportStatus === undefined) {\n        const testResponse = new Response('');\n        if ('body' in testResponse) {\n            try {\n                new Response(testResponse.body);\n                supportStatus = true;\n            }\n            catch (error) {\n                supportStatus = false;\n            }\n        }\n        supportStatus = false;\n    }\n    return supportStatus;\n}\nexport { canConstructResponseFromBodyStream };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A helper function that prevents a promise from being flagged as unused.\n *\n * @private\n **/\nexport function dontWaitFor(promise) {\n    // Effective no-op.\n    void promise.then(() => { });\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from '../_private/logger.js';\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\nimport '../_version.js';\n/**\n * Runs all of the callback functions, one at a time sequentially, in the order\n * in which they were registered.\n *\n * @memberof workbox-core\n * @private\n */\nasync function executeQuotaErrorCallbacks() {\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\n            `callbacks to clean up caches.`);\n    }\n    for (const callback of quotaErrorCallbacks) {\n        await callback();\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(callback, 'is complete.');\n        }\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Finished running callbacks.');\n    }\n}\nexport { executeQuotaErrorCallbacks };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst getFriendlyURL = (url) => {\n    const urlObj = new URL(String(url), location.href);\n    // See https://github.com/GoogleChrome/workbox/issues/2323\n    // We want to include everything, except for the origin if it's same-origin.\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\n};\nexport { getFriendlyURL };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst logger = (process.env.NODE_ENV === 'production'\n    ? null\n    : (() => {\n        // Don't overwrite this value if it's already set.\n        // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\n        if (!('__WB_DISABLE_DEV_LOGS' in globalThis)) {\n            self.__WB_DISABLE_DEV_LOGS = false;\n        }\n        let inGroup = false;\n        const methodToColorMap = {\n            debug: `#7f8c8d`,\n            log: `#2ecc71`,\n            warn: `#f39c12`,\n            error: `#c0392b`,\n            groupCollapsed: `#3498db`,\n            groupEnd: null, // No colored prefix on groupEnd\n        };\n        const print = function (method, args) {\n            if (self.__WB_DISABLE_DEV_LOGS) {\n                return;\n            }\n            if (method === 'groupCollapsed') {\n                // Safari doesn't print all console.groupCollapsed() arguments:\n                // https://bugs.webkit.org/show_bug.cgi?id=182754\n                if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n                    console[method](...args);\n                    return;\n                }\n            }\n            const styles = [\n                `background: ${methodToColorMap[method]}`,\n                `border-radius: 0.5em`,\n                `color: white`,\n                `font-weight: bold`,\n                `padding: 2px 0.5em`,\n            ];\n            // When in a group, the workbox prefix is not displayed.\n            const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\n            console[method](...logPrefix, ...args);\n            if (method === 'groupCollapsed') {\n                inGroup = true;\n            }\n            if (method === 'groupEnd') {\n                inGroup = false;\n            }\n        };\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        const api = {};\n        const loggerMethods = Object.keys(methodToColorMap);\n        for (const key of loggerMethods) {\n            const method = key;\n            api[method] = (...args) => {\n                print(method, args);\n            };\n        }\n        return api;\n    })());\nexport { logger };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { timeout } from './timeout.js';\nimport '../_version.js';\nconst MAX_RETRY_TIME = 2000;\n/**\n * Returns a promise that resolves to a window client matching the passed\n * `resultingClientId`. For browsers that don't support `resultingClientId`\n * or if waiting for the resulting client to apper takes too long, resolve to\n * `undefined`.\n *\n * @param {string} [resultingClientId]\n * @return {Promise<Client|undefined>}\n * @private\n */\nexport async function resultingClientExists(resultingClientId) {\n    if (!resultingClientId) {\n        return;\n    }\n    let existingWindows = await self.clients.matchAll({ type: 'window' });\n    const existingWindowIds = new Set(existingWindows.map((w) => w.id));\n    let resultingWindow;\n    const startTime = performance.now();\n    // Only wait up to `MAX_RETRY_TIME` to find a matching client.\n    while (performance.now() - startTime < MAX_RETRY_TIME) {\n        existingWindows = await self.clients.matchAll({ type: 'window' });\n        resultingWindow = existingWindows.find((w) => {\n            if (resultingClientId) {\n                // If we have a `resultingClientId`, we can match on that.\n                return w.id === resultingClientId;\n            }\n            else {\n                // Otherwise match on finding a window not in `existingWindowIds`.\n                return !existingWindowIds.has(w.id);\n            }\n        });\n        if (resultingWindow) {\n            break;\n        }\n        // Sleep for 100ms and retry.\n        await timeout(100);\n    }\n    return resultingWindow;\n}\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Returns a promise that resolves and the passed number of milliseconds.\n * This utility is an async/await-friendly version of `setTimeout`.\n *\n * @param {number} ms\n * @return {Promise}\n * @private\n */\nexport function timeout(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\n","/*\n  Copyright 2020 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A utility method that makes it easier to use `event.waitUntil` with\n * async functions and return the result.\n *\n * @param {ExtendableEvent} event\n * @param {Function} asyncFn\n * @return {Function}\n * @private\n */\nfunction waitUntil(event, asyncFn) {\n    const returnPromise = asyncFn();\n    event.waitUntil(returnPromise);\n    return returnPromise;\n}\nexport { waitUntil };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:core:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames as _cacheNames } from './_private/cacheNames.js';\nimport './_version.js';\n/**\n * Get the current cache names and prefix/suffix used by Workbox.\n *\n * `cacheNames.precache` is used for precached assets,\n * `cacheNames.googleAnalytics` is used by `workbox-google-analytics` to\n * store `analytics.js`, and `cacheNames.runtime` is used for everything else.\n *\n * `cacheNames.prefix` can be used to retrieve just the current prefix value.\n * `cacheNames.suffix` can be used to retrieve just the current suffix value.\n *\n * @return {Object} An object with `precache`, `runtime`, `prefix`, and\n *     `googleAnalytics` properties.\n *\n * @memberof workbox-core\n */\nconst cacheNames = {\n    get googleAnalytics() {\n        return _cacheNames.getGoogleAnalyticsName();\n    },\n    get precache() {\n        return _cacheNames.getPrecacheName();\n    },\n    get prefix() {\n        return _cacheNames.getPrefix();\n    },\n    get runtime() {\n        return _cacheNames.getRuntimeName();\n    },\n    get suffix() {\n        return _cacheNames.getSuffix();\n    },\n};\nexport { cacheNames };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n/**\n * Claim any currently available clients once the service worker\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\n *\n * @memberof workbox-core\n */\nfunction clientsClaim() {\n    self.addEventListener('activate', () => self.clients.claim());\n}\nexport { clientsClaim };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Allows developers to copy a response and modify its `headers`, `status`,\n * or `statusText` values (the values settable via a\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\n * object in the constructor).\n * To modify these values, pass a function as the second argument. That\n * function will be invoked with a single object with the response properties\n * `{headers, status, statusText}`. The return value of this function will\n * be used as the `ResponseInit` for the new `Response`. To change the values\n * either modify the passed parameter(s) and return it, or return a totally\n * new object.\n *\n * This method is intentionally limited to same-origin responses, regardless of\n * whether CORS was used or not.\n *\n * @param {Response} response\n * @param {Function} modifier\n * @memberof workbox-core\n */\nasync function copyResponse(response, modifier) {\n    let origin = null;\n    // If response.url isn't set, assume it's cross-origin and keep origin null.\n    if (response.url) {\n        const responseURL = new URL(response.url);\n        origin = responseURL.origin;\n    }\n    if (origin !== self.location.origin) {\n        throw new WorkboxError('cross-origin-copy-response', { origin });\n    }\n    const clonedResponse = response.clone();\n    // Create a fresh `ResponseInit` object by cloning the headers.\n    const responseInit = {\n        headers: new Headers(clonedResponse.headers),\n        status: clonedResponse.status,\n        statusText: clonedResponse.statusText,\n    };\n    // Apply any user modifications.\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\n    // Create the new response from the body stream and `ResponseInit`\n    // modifications. Note: not all browsers support the Response.body stream,\n    // so fall back to reading the entire body into memory as a blob.\n    const body = canConstructResponseFromBodyStream()\n        ? clonedResponse.body\n        : await clonedResponse.blob();\n    return new Response(body, modifiedResponseInit);\n}\nexport { copyResponse };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerQuotaErrorCallback } from './registerQuotaErrorCallback.js';\nimport * as _private from './_private.js';\nimport { cacheNames } from './cacheNames.js';\nimport { copyResponse } from './copyResponse.js';\nimport { clientsClaim } from './clientsClaim.js';\nimport { setCacheNameDetails } from './setCacheNameDetails.js';\nimport { skipWaiting } from './skipWaiting.js';\nimport './_version.js';\n/**\n * All of the Workbox service worker libraries use workbox-core for shared\n * code as well as setting default values that need to be shared (like cache\n * names).\n *\n * @module workbox-core\n */\nexport { _private, cacheNames, clientsClaim, copyResponse, registerQuotaErrorCallback, setCacheNameDetails, skipWaiting, };\nexport * from './types.js';\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { messages } from './messages.js';\nimport '../../_version.js';\nconst fallback = (code, ...args) => {\n    let msg = code;\n    if (args.length > 0) {\n        msg += ` :: ${JSON.stringify(args)}`;\n    }\n    return msg;\n};\nconst generatorFunction = (code, details = {}) => {\n    const message = messages[code];\n    if (!message) {\n        throw new Error(`Unable to find message for code '${code}'.`);\n    }\n    return message(details);\n};\nexport const messageGenerator = process.env.NODE_ENV === 'production' ? fallback : generatorFunction;\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../../_version.js';\nexport const messages = {\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\n        if (!paramName || !validValueDescription) {\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\n        }\n        return (`The '${paramName}' parameter was given a value with an ` +\n            `unexpected value. ${validValueDescription} Received a value of ` +\n            `${JSON.stringify(value)}.`);\n    },\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\n        if (!moduleName || !className || !funcName || !paramName) {\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${className}.${funcName}()' must be an array.`);\n    },\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName, }) => {\n        if (!expectedType || !paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}` +\n            `${funcName}()' must be of type ${expectedType}.`);\n    },\n    'incorrect-class': ({ expectedClassName, paramName, moduleName, className, funcName, isReturnValueProblem, }) => {\n        if (!expectedClassName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\n        }\n        const classNameStr = className ? `${className}.` : '';\n        if (isReturnValueProblem) {\n            return (`The return value from ` +\n                `'${moduleName}.${classNameStr}${funcName}()' ` +\n                `must be an instance of class ${expectedClassName}.`);\n        }\n        return (`The parameter '${paramName}' passed into ` +\n            `'${moduleName}.${classNameStr}${funcName}()' ` +\n            `must be an instance of class ${expectedClassName}.`);\n    },\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName, }) => {\n        if (!expectedMethod ||\n            !paramName ||\n            !moduleName ||\n            !className ||\n            !funcName) {\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\n        }\n        return (`${moduleName}.${className}.${funcName}() expected the ` +\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`);\n    },\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\n        return (`An unexpected entry was passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\n            `strings with one or more characters, objects with a url property or ` +\n            `Request objects.`);\n    },\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\n        if (!firstEntry || !secondEntry) {\n            throw new Error(`Unexpected input to ` + `'add-to-cache-list-duplicate-entries' error.`);\n        }\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${firstEntry} but different revision details. Workbox is ` +\n            `unable to cache and version the asset correctly. Please remove one ` +\n            `of the entries.`);\n    },\n    'plugin-error-request-will-fetch': ({ thrownErrorMessage }) => {\n        if (!thrownErrorMessage) {\n            throw new Error(`Unexpected input to ` + `'plugin-error-request-will-fetch', error.`);\n        }\n        return (`An error was thrown by a plugins 'requestWillFetch()' method. ` +\n            `The thrown error message was: '${thrownErrorMessage}'.`);\n    },\n    'invalid-cache-name': ({ cacheNameId, value }) => {\n        if (!cacheNameId) {\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\n        }\n        return (`You must provide a name containing at least one character for ` +\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\n            `'${JSON.stringify(value)}'`);\n    },\n    'unregister-route-but-not-found-with-method': ({ method }) => {\n        if (!method) {\n            throw new Error(`Unexpected input to ` +\n                `'unregister-route-but-not-found-with-method' error.`);\n        }\n        return (`The route you're trying to unregister was not  previously ` +\n            `registered for the method type '${method}'.`);\n    },\n    'unregister-route-route-not-registered': () => {\n        return (`The route you're trying to unregister was not previously ` +\n            `registered.`);\n    },\n    'queue-replay-failed': ({ name }) => {\n        return `Replaying the background sync queue '${name}' failed.`;\n    },\n    'duplicate-queue-name': ({ name }) => {\n        return (`The Queue name '${name}' is already being used. ` +\n            `All instances of backgroundSync.Queue must be given unique names.`);\n    },\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\n        return (`The '${methodName}()' method can only be used when the ` +\n            `'${paramName}' is used in the constructor.`);\n    },\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\n        return (`The supplied '${paramName}' parameter was an unsupported type. ` +\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\n            `valid input types.`);\n    },\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName, }) => {\n        return (`The supplied '${paramName}' parameter must be an array of ` +\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\n            `to fix the issue.`);\n    },\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.maxEntries or config.maxAgeSeconds` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\n        return (`You must define either config.statuses or config.headers` +\n            `in ${moduleName}.${className}.${funcName}`);\n    },\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\n        if (!paramName || !moduleName || !funcName) {\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\n        }\n        return (`When using strings, the '${paramName}' parameter must start with ` +\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\n            `more info.`);\n    },\n    'channel-name-required': () => {\n        return (`You must provide a channelName to construct a ` +\n            `BroadcastCacheUpdate instance.`);\n    },\n    'invalid-responses-are-same-args': () => {\n        return (`The arguments passed into responsesAreSame() appear to be ` +\n            `invalid. Please ensure valid Responses are used.`);\n    },\n    'expire-custom-caches-only': () => {\n        return (`You must provide a 'cacheName' property when using the ` +\n            `expiration plugin with a runtime caching strategy.`);\n    },\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\n        }\n        return (`The 'unit' portion of the Range header must be set to 'bytes'. ` +\n            `The Range header provided was \"${normalizedRangeHeader}\"`);\n    },\n    'single-range-only': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\n        }\n        return (`Multiple ranges are not supported. Please use a  single start ` +\n            `value, and optional end value. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\n        if (!normalizedRangeHeader) {\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\n        }\n        return (`The Range header is missing both start and end values. At least ` +\n            `one of those values is needed. The Range header provided was ` +\n            `\"${normalizedRangeHeader}\"`);\n    },\n    'no-range-header': () => {\n        return `No Range header was found in the Request provided.`;\n    },\n    'range-not-satisfiable': ({ size, start, end }) => {\n        return (`The start (${start}) and end (${end}) values in the Range are ` +\n            `not satisfiable by the cached response, which is ${size} bytes.`);\n    },\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\n        return (`Unable to cache '${url}' because it is a '${method}' request and ` +\n            `only 'GET' requests can be cached.`);\n    },\n    'cache-put-with-no-response': ({ url }) => {\n        return (`There was an attempt to cache '${url}' but the response was not ` +\n            `defined.`);\n    },\n    'no-response': ({ url, error }) => {\n        let message = `The strategy could not generate a response for '${url}'.`;\n        if (error) {\n            message += ` The underlying error is ${error}.`;\n        }\n        return message;\n    },\n    'bad-precaching-response': ({ url, status }) => {\n        return (`The precaching request for '${url}' failed` +\n            (status ? ` with an HTTP status of ${status}.` : `.`));\n    },\n    'non-precached-url': ({ url }) => {\n        return (`createHandlerBoundToURL('${url}') was called, but that URL is ` +\n            `not precached. Please pass in a URL that is precached instead.`);\n    },\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\n        return (`Two of the entries passed to ` +\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\n            `${url} with different integrity values. Please remove one of them.`);\n    },\n    'missing-precache-entry': ({ cacheName, url }) => {\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\n    },\n    'cross-origin-copy-response': ({ origin }) => {\n        return (`workbox-core.copyResponse() can only be used with same-origin ` +\n            `responses. It was passed a response with origin ${origin}.`);\n    },\n    'opaque-streams-source': ({ type }) => {\n        const message = `One of the workbox-streams sources resulted in an ` +\n            `'${type}' response.`;\n        if (type === 'opaqueredirect') {\n            return (`${message} Please do not use a navigation request that results ` +\n                `in a redirect as a source.`);\n        }\n        return `${message} Please ensure your sources are CORS-enabled.`;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n// Callbacks to be executed whenever there's a quota error.\n// Can't change Function type right now.\n// eslint-disable-next-line @typescript-eslint/ban-types\nconst quotaErrorCallbacks = new Set();\nexport { quotaErrorCallbacks };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport { assert } from './_private/assert.js';\nimport { quotaErrorCallbacks } from './models/quotaErrorCallbacks.js';\nimport './_version.js';\n/**\n * Adds a function to the set of quotaErrorCallbacks that will be executed if\n * there's a quota error.\n *\n * @param {Function} callback\n * @memberof workbox-core\n */\n// Can't change Function type\n// eslint-disable-next-line @typescript-eslint/ban-types\nfunction registerQuotaErrorCallback(callback) {\n    if (process.env.NODE_ENV !== 'production') {\n        assert.isType(callback, 'function', {\n            moduleName: 'workbox-core',\n            funcName: 'register',\n            paramName: 'callback',\n        });\n    }\n    quotaErrorCallbacks.add(callback);\n    if (process.env.NODE_ENV !== 'production') {\n        logger.log('Registered a callback to respond to quota errors.', callback);\n    }\n}\nexport { registerQuotaErrorCallback };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from './_private/assert.js';\nimport { cacheNames } from './_private/cacheNames.js';\nimport { WorkboxError } from './_private/WorkboxError.js';\nimport './_version.js';\n/**\n * Modifies the default cache names used by the Workbox packages.\n * Cache names are generated as `<prefix>-<Cache Name>-<suffix>`.\n *\n * @param {Object} details\n * @param {Object} [details.prefix] The string to add to the beginning of\n *     the precache and runtime cache names.\n * @param {Object} [details.suffix] The string to add to the end of\n *     the precache and runtime cache names.\n * @param {Object} [details.precache] The cache name to use for precache\n *     caching.\n * @param {Object} [details.runtime] The cache name to use for runtime caching.\n * @param {Object} [details.googleAnalytics] The cache name to use for\n *     `workbox-google-analytics` caching.\n *\n * @memberof workbox-core\n */\nfunction setCacheNameDetails(details) {\n    if (process.env.NODE_ENV !== 'production') {\n        Object.keys(details).forEach((key) => {\n            assert.isType(details[key], 'string', {\n                moduleName: 'workbox-core',\n                funcName: 'setCacheNameDetails',\n                paramName: `details.${key}`,\n            });\n        });\n        if ('precache' in details && details['precache'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'precache',\n                value: details['precache'],\n            });\n        }\n        if ('runtime' in details && details['runtime'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'runtime',\n                value: details['runtime'],\n            });\n        }\n        if ('googleAnalytics' in details &&\n            details['googleAnalytics'].length === 0) {\n            throw new WorkboxError('invalid-cache-name', {\n                cacheNameId: 'googleAnalytics',\n                value: details['googleAnalytics'],\n            });\n        }\n    }\n    cacheNames.updateDetails(details);\n}\nexport { setCacheNameDetails };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from './_private/logger.js';\nimport './_version.js';\n/**\n * This method is deprecated, and will be removed in Workbox v7.\n *\n * Calling self.skipWaiting() is equivalent, and should be used instead.\n *\n * @memberof workbox-core\n */\nfunction skipWaiting() {\n    // Just call self.skipWaiting() directly.\n    // See https://github.com/GoogleChrome/workbox/issues/2525\n    if (process.env.NODE_ENV !== 'production') {\n        logger.warn(`skipWaiting() from workbox-core is no longer recommended ` +\n            `and will be removed in Workbox v7. Using self.skipWaiting() instead ` +\n            `is equivalent.`);\n    }\n    void self.skipWaiting();\n}\nexport { skipWaiting };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheTimestampsModel } from './models/CacheTimestampsModel.js';\nimport './_version.js';\n/**\n * The `CacheExpiration` class allows you define an expiration and / or\n * limit on the number of responses stored in a\n * [`Cache`](https://developer.mozilla.org/en-US/docs/Web/API/Cache).\n *\n * @memberof workbox-expiration\n */\nclass CacheExpiration {\n    /**\n     * To construct a new CacheExpiration instance you must provide at least\n     * one of the `config` properties.\n     *\n     * @param {string} cacheName Name of the cache to apply restrictions to.\n     * @param {Object} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     */\n    constructor(cacheName, config = {}) {\n        this._isRunning = false;\n        this._rerunRequested = false;\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(cacheName, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'constructor',\n                paramName: 'cacheName',\n            });\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'CacheExpiration',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._maxEntries = config.maxEntries;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._matchOptions = config.matchOptions;\n        this._cacheName = cacheName;\n        this._timestampModel = new CacheTimestampsModel(cacheName);\n    }\n    /**\n     * Expires entries for the given cache and given criteria.\n     */\n    async expireEntries() {\n        if (this._isRunning) {\n            this._rerunRequested = true;\n            return;\n        }\n        this._isRunning = true;\n        const minTimestamp = this._maxAgeSeconds\n            ? Date.now() - this._maxAgeSeconds * 1000\n            : 0;\n        const urlsExpired = await this._timestampModel.expireEntries(minTimestamp, this._maxEntries);\n        // Delete URLs from the cache\n        const cache = await self.caches.open(this._cacheName);\n        for (const url of urlsExpired) {\n            await cache.delete(url, this._matchOptions);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (urlsExpired.length > 0) {\n                logger.groupCollapsed(`Expired ${urlsExpired.length} ` +\n                    `${urlsExpired.length === 1 ? 'entry' : 'entries'} and removed ` +\n                    `${urlsExpired.length === 1 ? 'it' : 'them'} from the ` +\n                    `'${this._cacheName}' cache.`);\n                logger.log(`Expired the following ${urlsExpired.length === 1 ? 'URL' : 'URLs'}:`);\n                urlsExpired.forEach((url) => logger.log(`    ${url}`));\n                logger.groupEnd();\n            }\n            else {\n                logger.debug(`Cache expiration ran and found no entries to remove.`);\n            }\n        }\n        this._isRunning = false;\n        if (this._rerunRequested) {\n            this._rerunRequested = false;\n            dontWaitFor(this.expireEntries());\n        }\n    }\n    /**\n     * Update the timestamp for the given URL. This ensures the when\n     * removing entries based on maximum entries, most recently used\n     * is accurate or when expiring, the timestamp is up-to-date.\n     *\n     * @param {string} url\n     */\n    async updateTimestamp(url) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(url, 'string', {\n                moduleName: 'workbox-expiration',\n                className: 'CacheExpiration',\n                funcName: 'updateTimestamp',\n                paramName: 'url',\n            });\n        }\n        await this._timestampModel.setTimestamp(url, Date.now());\n    }\n    /**\n     * Can be used to check if a URL has expired or not before it's used.\n     *\n     * This requires a look up from IndexedDB, so can be slow.\n     *\n     * Note: This method will not remove the cached entry, call\n     * `expireEntries()` to remove indexedDB and Cache entries.\n     *\n     * @param {string} url\n     * @return {boolean}\n     */\n    async isURLExpired(url) {\n        if (!this._maxAgeSeconds) {\n            if (process.env.NODE_ENV !== 'production') {\n                throw new WorkboxError(`expired-test-without-max-age`, {\n                    methodName: 'isURLExpired',\n                    paramName: 'maxAgeSeconds',\n                });\n            }\n            return false;\n        }\n        else {\n            const timestamp = await this._timestampModel.getTimestamp(url);\n            const expireOlderThan = Date.now() - this._maxAgeSeconds * 1000;\n            return timestamp !== undefined ? timestamp < expireOlderThan : true;\n        }\n    }\n    /**\n     * Removes the IndexedDB object store used to keep track of cache expiration\n     * metadata.\n     */\n    async delete() {\n        // Make sure we don't attempt another rerun if we're called in the middle of\n        // a cache expiration.\n        this._rerunRequested = false;\n        await this._timestampModel.expireEntries(Infinity); // Expires all.\n    }\n}\nexport { CacheExpiration };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { dontWaitFor } from 'workbox-core/_private/dontWaitFor.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { registerQuotaErrorCallback } from 'workbox-core/registerQuotaErrorCallback.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { CacheExpiration } from './CacheExpiration.js';\nimport './_version.js';\n/**\n * This plugin can be used in a `workbox-strategy` to regularly enforce a\n * limit on the age and / or the number of cached requests.\n *\n * It can only be used with `workbox-strategy` instances that have a\n * [custom `cacheName` property set](/web/tools/workbox/guides/configure-workbox#custom_cache_names_in_strategies).\n * In other words, it can't be used to expire entries in strategy that uses the\n * default runtime cache name.\n *\n * Whenever a cached response is used or updated, this plugin will look\n * at the associated cache and remove any old or extra responses.\n *\n * When using `maxAgeSeconds`, responses may be used *once* after expiring\n * because the expiration clean up will not have occurred until *after* the\n * cached response has been used. If the response has a \"Date\" header, then\n * a light weight expiration check is performed and the response will not be\n * used immediately.\n *\n * When using `maxEntries`, the entry least-recently requested will be removed\n * from the cache first.\n *\n * @memberof workbox-expiration\n */\nclass ExpirationPlugin {\n    /**\n     * @param {ExpirationPluginOptions} config\n     * @param {number} [config.maxEntries] The maximum number of entries to cache.\n     * Entries used the least will be removed as the maximum is reached.\n     * @param {number} [config.maxAgeSeconds] The maximum age of an entry before\n     * it's treated as stale and removed.\n     * @param {Object} [config.matchOptions] The [`CacheQueryOptions`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/delete#Parameters)\n     * that will be used when calling `delete()` on the cache.\n     * @param {boolean} [config.purgeOnQuotaError] Whether to opt this cache in to\n     * automatic deletion if the available storage quota has been exceeded.\n     */\n    constructor(config = {}) {\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when a `Response` is about to be returned\n         * from a [Cache](https://developer.mozilla.org/en-US/docs/Web/API/Cache) to\n         * the handler. It allows the `Response` to be inspected for freshness and\n         * prevents it from being used if the `Response`'s `Date` header value is\n         * older than the configured `maxAgeSeconds`.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache the response is in.\n         * @param {Response} options.cachedResponse The `Response` object that's been\n         *     read from a cache and whose freshness should be checked.\n         * @return {Response} Either the `cachedResponse`, if it's\n         *     fresh, or `null` if the `Response` is older than `maxAgeSeconds`.\n         *\n         * @private\n         */\n        this.cachedResponseWillBeUsed = async ({ event, request, cacheName, cachedResponse, }) => {\n            if (!cachedResponse) {\n                return null;\n            }\n            const isFresh = this._isResponseDateFresh(cachedResponse);\n            // Expire entries to ensure that even if the expiration date has\n            // expired, it'll only be used once.\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            dontWaitFor(cacheExpiration.expireEntries());\n            // Update the metadata for the request URL to the current timestamp,\n            // but don't `await` it as we don't want to block the response.\n            const updateTimestampDone = cacheExpiration.updateTimestamp(request.url);\n            if (event) {\n                try {\n                    event.waitUntil(updateTimestampDone);\n                }\n                catch (error) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // The event may not be a fetch event; only log the URL if it is.\n                        if ('request' in event) {\n                            logger.warn(`Unable to ensure service worker stays alive when ` +\n                                `updating cache entry for ` +\n                                `'${getFriendlyURL(event.request.url)}'.`);\n                        }\n                    }\n                }\n            }\n            return isFresh ? cachedResponse : null;\n        };\n        /**\n         * A \"lifecycle\" callback that will be triggered automatically by the\n         * `workbox-strategies` handlers when an entry is added to a cache.\n         *\n         * @param {Object} options\n         * @param {string} options.cacheName Name of the cache that was updated.\n         * @param {string} options.request The Request for the cached entry.\n         *\n         * @private\n         */\n        this.cacheDidUpdate = async ({ cacheName, request, }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                assert.isType(cacheName, 'string', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'cacheName',\n                });\n                assert.isInstance(request, Request, {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'cacheDidUpdate',\n                    paramName: 'request',\n                });\n            }\n            const cacheExpiration = this._getCacheExpiration(cacheName);\n            await cacheExpiration.updateTimestamp(request.url);\n            await cacheExpiration.expireEntries();\n        };\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(config.maxEntries || config.maxAgeSeconds)) {\n                throw new WorkboxError('max-entries-or-age-required', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                });\n            }\n            if (config.maxEntries) {\n                assert.isType(config.maxEntries, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxEntries',\n                });\n            }\n            if (config.maxAgeSeconds) {\n                assert.isType(config.maxAgeSeconds, 'number', {\n                    moduleName: 'workbox-expiration',\n                    className: 'Plugin',\n                    funcName: 'constructor',\n                    paramName: 'config.maxAgeSeconds',\n                });\n            }\n        }\n        this._config = config;\n        this._maxAgeSeconds = config.maxAgeSeconds;\n        this._cacheExpirations = new Map();\n        if (config.purgeOnQuotaError) {\n            registerQuotaErrorCallback(() => this.deleteCacheAndMetadata());\n        }\n    }\n    /**\n     * A simple helper method to return a CacheExpiration instance for a given\n     * cache name.\n     *\n     * @param {string} cacheName\n     * @return {CacheExpiration}\n     *\n     * @private\n     */\n    _getCacheExpiration(cacheName) {\n        if (cacheName === cacheNames.getRuntimeName()) {\n            throw new WorkboxError('expire-custom-caches-only');\n        }\n        let cacheExpiration = this._cacheExpirations.get(cacheName);\n        if (!cacheExpiration) {\n            cacheExpiration = new CacheExpiration(cacheName, this._config);\n            this._cacheExpirations.set(cacheName, cacheExpiration);\n        }\n        return cacheExpiration;\n    }\n    /**\n     * @param {Response} cachedResponse\n     * @return {boolean}\n     *\n     * @private\n     */\n    _isResponseDateFresh(cachedResponse) {\n        if (!this._maxAgeSeconds) {\n            // We aren't expiring by age, so return true, it's fresh\n            return true;\n        }\n        // Check if the 'date' header will suffice a quick expiration check.\n        // See https://github.com/GoogleChromeLabs/sw-toolbox/issues/164 for\n        // discussion.\n        const dateHeaderTimestamp = this._getDateHeaderTimestamp(cachedResponse);\n        if (dateHeaderTimestamp === null) {\n            // Unable to parse date, so assume it's fresh.\n            return true;\n        }\n        // If we have a valid headerTime, then our response is fresh iff the\n        // headerTime plus maxAgeSeconds is greater than the current time.\n        const now = Date.now();\n        return dateHeaderTimestamp >= now - this._maxAgeSeconds * 1000;\n    }\n    /**\n     * This method will extract the data header and parse it into a useful\n     * value.\n     *\n     * @param {Response} cachedResponse\n     * @return {number|null}\n     *\n     * @private\n     */\n    _getDateHeaderTimestamp(cachedResponse) {\n        if (!cachedResponse.headers.has('date')) {\n            return null;\n        }\n        const dateHeader = cachedResponse.headers.get('date');\n        const parsedDate = new Date(dateHeader);\n        const headerTime = parsedDate.getTime();\n        // If the Date header was invalid for some reason, parsedDate.getTime()\n        // will return NaN.\n        if (isNaN(headerTime)) {\n            return null;\n        }\n        return headerTime;\n    }\n    /**\n     * This is a helper method that performs two operations:\n     *\n     * - Deletes *all* the underlying Cache instances associated with this plugin\n     * instance, by calling caches.delete() on your behalf.\n     * - Deletes the metadata from IndexedDB used to keep track of expiration\n     * details for each Cache instance.\n     *\n     * When using cache expiration, calling this method is preferable to calling\n     * `caches.delete()` directly, since this will ensure that the IndexedDB\n     * metadata is also cleanly removed and open IndexedDB instances are deleted.\n     *\n     * Note that if you're *not* using cache expiration for a given cache, calling\n     * `caches.delete()` and passing in the cache's name should be sufficient.\n     * There is no Workbox-specific method needed for cleanup in that case.\n     */\n    async deleteCacheAndMetadata() {\n        // Do this one at a time instead of all at once via `Promise.all()` to\n        // reduce the chance of inconsistency if a promise rejects.\n        for (const [cacheName, cacheExpiration] of this._cacheExpirations) {\n            await self.caches.delete(cacheName);\n            await cacheExpiration.delete();\n        }\n        // Reset this._cacheExpirations to its initial state.\n        this._cacheExpirations = new Map();\n    }\n}\nexport { ExpirationPlugin };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:expiration:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheExpiration } from './CacheExpiration.js';\nimport { ExpirationPlugin } from './ExpirationPlugin.js';\nimport './_version.js';\n/**\n * @module workbox-expiration\n */\nexport { CacheExpiration, ExpirationPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { openDB, deleteDB } from 'idb';\nimport '../_version.js';\nconst DB_NAME = 'workbox-expiration';\nconst CACHE_OBJECT_STORE = 'cache-entries';\nconst normalizeURL = (unNormalizedUrl) => {\n    const url = new URL(unNormalizedUrl, location.href);\n    url.hash = '';\n    return url.href;\n};\n/**\n * Returns the timestamp model.\n *\n * @private\n */\nclass CacheTimestampsModel {\n    /**\n     *\n     * @param {string} cacheName\n     *\n     * @private\n     */\n    constructor(cacheName) {\n        this._db = null;\n        this._cacheName = cacheName;\n    }\n    /**\n     * Performs an upgrade of indexedDB.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDb(db) {\n        // TODO(philipwalton): EdgeHTML doesn't support arrays as a keyPath, so we\n        // have to use the `id` keyPath here and create our own values (a\n        // concatenation of `url + cacheName`) instead of simply using\n        // `keyPath: ['url', 'cacheName']`, which is supported in other browsers.\n        const objStore = db.createObjectStore(CACHE_OBJECT_STORE, { keyPath: 'id' });\n        // TODO(philipwalton): once we don't have to support EdgeHTML, we can\n        // create a single index with the keyPath `['cacheName', 'timestamp']`\n        // instead of doing both these indexes.\n        objStore.createIndex('cacheName', 'cacheName', { unique: false });\n        objStore.createIndex('timestamp', 'timestamp', { unique: false });\n    }\n    /**\n     * Performs an upgrade of indexedDB and deletes deprecated DBs.\n     *\n     * @param {IDBPDatabase<CacheDbSchema>} db\n     *\n     * @private\n     */\n    _upgradeDbAndDeleteOldDbs(db) {\n        this._upgradeDb(db);\n        if (this._cacheName) {\n            void deleteDB(this._cacheName);\n        }\n    }\n    /**\n     * @param {string} url\n     * @param {number} timestamp\n     *\n     * @private\n     */\n    async setTimestamp(url, timestamp) {\n        url = normalizeURL(url);\n        const entry = {\n            url,\n            timestamp,\n            cacheName: this._cacheName,\n            // Creating an ID from the URL and cache name won't be necessary once\n            // Edge switches to Chromium and all browsers we support work with\n            // array keyPaths.\n            id: this._getId(url),\n        };\n        const db = await this.getDb();\n        const tx = db.transaction(CACHE_OBJECT_STORE, 'readwrite', {\n            durability: 'relaxed',\n        });\n        await tx.store.put(entry);\n        await tx.done;\n    }\n    /**\n     * Returns the timestamp stored for a given URL.\n     *\n     * @param {string} url\n     * @return {number | undefined}\n     *\n     * @private\n     */\n    async getTimestamp(url) {\n        const db = await this.getDb();\n        const entry = await db.get(CACHE_OBJECT_STORE, this._getId(url));\n        return entry === null || entry === void 0 ? void 0 : entry.timestamp;\n    }\n    /**\n     * Iterates through all the entries in the object store (from newest to\n     * oldest) and removes entries once either `maxCount` is reached or the\n     * entry's timestamp is less than `minTimestamp`.\n     *\n     * @param {number} minTimestamp\n     * @param {number} maxCount\n     * @return {Array<string>}\n     *\n     * @private\n     */\n    async expireEntries(minTimestamp, maxCount) {\n        const db = await this.getDb();\n        let cursor = await db\n            .transaction(CACHE_OBJECT_STORE)\n            .store.index('timestamp')\n            .openCursor(null, 'prev');\n        const entriesToDelete = [];\n        let entriesNotDeletedCount = 0;\n        while (cursor) {\n            const result = cursor.value;\n            // TODO(philipwalton): once we can use a multi-key index, we\n            // won't have to check `cacheName` here.\n            if (result.cacheName === this._cacheName) {\n                // Delete an entry if it's older than the max age or\n                // if we already have the max number allowed.\n                if ((minTimestamp && result.timestamp < minTimestamp) ||\n                    (maxCount && entriesNotDeletedCount >= maxCount)) {\n                    // TODO(philipwalton): we should be able to delete the\n                    // entry right here, but doing so causes an iteration\n                    // bug in Safari stable (fixed in TP). Instead we can\n                    // store the keys of the entries to delete, and then\n                    // delete the separate transactions.\n                    // https://github.com/GoogleChrome/workbox/issues/1978\n                    // cursor.delete();\n                    // We only need to return the URL, not the whole entry.\n                    entriesToDelete.push(cursor.value);\n                }\n                else {\n                    entriesNotDeletedCount++;\n                }\n            }\n            cursor = await cursor.continue();\n        }\n        // TODO(philipwalton): once the Safari bug in the following issue is fixed,\n        // we should be able to remove this loop and do the entry deletion in the\n        // cursor loop above:\n        // https://github.com/GoogleChrome/workbox/issues/1978\n        const urlsDeleted = [];\n        for (const entry of entriesToDelete) {\n            await db.delete(CACHE_OBJECT_STORE, entry.id);\n            urlsDeleted.push(entry.url);\n        }\n        return urlsDeleted;\n    }\n    /**\n     * Takes a URL and returns an ID that will be unique in the object store.\n     *\n     * @param {string} url\n     * @return {string}\n     *\n     * @private\n     */\n    _getId(url) {\n        // Creating an ID from the URL and cache name won't be necessary once\n        // Edge switches to Chromium and all browsers we support work with\n        // array keyPaths.\n        return this._cacheName + '|' + normalizeURL(url);\n    }\n    /**\n     * Returns an open connection to the database.\n     *\n     * @private\n     */\n    async getDb() {\n        if (!this._db) {\n            this._db = await openDB(DB_NAME, 1, {\n                upgrade: this._upgradeDbAndDeleteOldDbs.bind(this),\n            });\n        }\n        return this._db;\n    }\n}\nexport { CacheTimestampsModel };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { waitUntil } from 'workbox-core/_private/waitUntil.js';\nimport { createCacheKey } from './utils/createCacheKey.js';\nimport { PrecacheInstallReportPlugin } from './utils/PrecacheInstallReportPlugin.js';\nimport { PrecacheCacheKeyPlugin } from './utils/PrecacheCacheKeyPlugin.js';\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\nimport { printInstallDetails } from './utils/printInstallDetails.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport './_version.js';\n/**\n * Performs efficient precaching of assets.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheController {\n    /**\n     * Create a new PrecacheController.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] The cache to use for precaching.\n     * @param {string} [options.plugins] Plugins to use when precaching as well\n     * as responding to fetch events for precached assets.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor({ cacheName, plugins = [], fallbackToNetwork = true, } = {}) {\n        this._urlsToCacheKeys = new Map();\n        this._urlsToCacheModes = new Map();\n        this._cacheKeysToIntegrities = new Map();\n        this._strategy = new PrecacheStrategy({\n            cacheName: cacheNames.getPrecacheName(cacheName),\n            plugins: [\n                ...plugins,\n                new PrecacheCacheKeyPlugin({ precacheController: this }),\n            ],\n            fallbackToNetwork,\n        });\n        // Bind the install and activate methods to the instance.\n        this.install = this.install.bind(this);\n        this.activate = this.activate.bind(this);\n    }\n    /**\n     * @type {workbox-precaching.PrecacheStrategy} The strategy created by this controller and\n     * used to cache assets and respond to fetch events.\n     */\n    get strategy() {\n        return this._strategy;\n    }\n    /**\n     * Adds items to the precache list, removing any duplicates and\n     * stores the files in the\n     * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n     * worker installs.\n     *\n     * This method can be called multiple times.\n     *\n     * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n     */\n    precache(entries) {\n        this.addToCacheList(entries);\n        if (!this._installAndActiveListenersAdded) {\n            self.addEventListener('install', this.install);\n            self.addEventListener('activate', this.activate);\n            this._installAndActiveListenersAdded = true;\n        }\n    }\n    /**\n     * This method will add items to the precache list, removing duplicates\n     * and ensuring the information is valid.\n     *\n     * @param {Array<workbox-precaching.PrecacheController.PrecacheEntry|string>} entries\n     *     Array of entries to precache.\n     */\n    addToCacheList(entries) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArray(entries, {\n                moduleName: 'workbox-precaching',\n                className: 'PrecacheController',\n                funcName: 'addToCacheList',\n                paramName: 'entries',\n            });\n        }\n        const urlsToWarnAbout = [];\n        for (const entry of entries) {\n            // See https://github.com/GoogleChrome/workbox/issues/2259\n            if (typeof entry === 'string') {\n                urlsToWarnAbout.push(entry);\n            }\n            else if (entry && entry.revision === undefined) {\n                urlsToWarnAbout.push(entry.url);\n            }\n            const { cacheKey, url } = createCacheKey(entry);\n            const cacheMode = typeof entry !== 'string' && entry.revision ? 'reload' : 'default';\n            if (this._urlsToCacheKeys.has(url) &&\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\n                    firstEntry: this._urlsToCacheKeys.get(url),\n                    secondEntry: cacheKey,\n                });\n            }\n            if (typeof entry !== 'string' && entry.integrity) {\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\n                        url,\n                    });\n                }\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\n            }\n            this._urlsToCacheKeys.set(url, cacheKey);\n            this._urlsToCacheModes.set(url, cacheMode);\n            if (urlsToWarnAbout.length > 0) {\n                const warningMessage = `Workbox is precaching URLs without revision ` +\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\n                    `Learn more at https://bit.ly/wb-precache`;\n                if (process.env.NODE_ENV === 'production') {\n                    // Use console directly to display this warning without bloating\n                    // bundle sizes by pulling in all of the logger codebase in prod.\n                    console.warn(warningMessage);\n                }\n                else {\n                    logger.warn(warningMessage);\n                }\n            }\n        }\n    }\n    /**\n     * Precaches new and updated assets. Call this method from the service worker\n     * install event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.InstallResult>}\n     */\n    install(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const installReportPlugin = new PrecacheInstallReportPlugin();\n            this.strategy.plugins.push(installReportPlugin);\n            // Cache entries one at a time.\n            // See https://github.com/GoogleChrome/workbox/issues/2528\n            for (const [url, cacheKey] of this._urlsToCacheKeys) {\n                const integrity = this._cacheKeysToIntegrities.get(cacheKey);\n                const cacheMode = this._urlsToCacheModes.get(url);\n                const request = new Request(url, {\n                    integrity,\n                    cache: cacheMode,\n                    credentials: 'same-origin',\n                });\n                await Promise.all(this.strategy.handleAll({\n                    params: { cacheKey },\n                    request,\n                    event,\n                }));\n            }\n            const { updatedURLs, notUpdatedURLs } = installReportPlugin;\n            if (process.env.NODE_ENV !== 'production') {\n                printInstallDetails(updatedURLs, notUpdatedURLs);\n            }\n            return { updatedURLs, notUpdatedURLs };\n        });\n    }\n    /**\n     * Deletes assets that are no longer present in the current precache manifest.\n     * Call this method from the service worker activate event.\n     *\n     * Note: this method calls `event.waitUntil()` for you, so you do not need\n     * to call it yourself in your event handlers.\n     *\n     * @param {ExtendableEvent} event\n     * @return {Promise<workbox-precaching.CleanupResult>}\n     */\n    activate(event) {\n        // waitUntil returns Promise<any>\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-return\n        return waitUntil(event, async () => {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            const currentlyCachedRequests = await cache.keys();\n            const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\n            const deletedURLs = [];\n            for (const request of currentlyCachedRequests) {\n                if (!expectedCacheKeys.has(request.url)) {\n                    await cache.delete(request);\n                    deletedURLs.push(request.url);\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                printCleanupDetails(deletedURLs);\n            }\n            return { deletedURLs };\n        });\n    }\n    /**\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\n     * into account the revision information for the URL.\n     *\n     * @return {Map<string, string>} A URL to cache key mapping.\n     */\n    getURLsToCacheKeys() {\n        return this._urlsToCacheKeys;\n    }\n    /**\n     * Returns a list of all the URLs that have been precached by the current\n     * service worker.\n     *\n     * @return {Array<string>} The precached URLs.\n     */\n    getCachedURLs() {\n        return [...this._urlsToCacheKeys.keys()];\n    }\n    /**\n     * Returns the cache key used for storing a given URL. If that URL is\n     * unversioned, like `/index.html', then the cache key will be the original\n     * URL with a search parameter appended to it.\n     *\n     * @param {string} url A URL whose cache key you want to look up.\n     * @return {string} The versioned URL that corresponds to a cache key\n     * for the original URL, or undefined if that URL isn't precached.\n     */\n    getCacheKeyForURL(url) {\n        const urlObject = new URL(url, location.href);\n        return this._urlsToCacheKeys.get(urlObject.href);\n    }\n    /**\n     * @param {string} url A cache key whose SRI you want to look up.\n     * @return {string} The subresource integrity associated with the cache key,\n     * or undefined if it's not set.\n     */\n    getIntegrityForCacheKey(cacheKey) {\n        return this._cacheKeysToIntegrities.get(cacheKey);\n    }\n    /**\n     * This acts as a drop-in replacement for\n     * [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\n     * with the following differences:\n     *\n     * - It knows what the name of the precache is, and only checks in that cache.\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\n     * and it will automatically look up the correct cache key for the currently\n     * active revision of that URL.\n     *\n     * E.g., `matchPrecache('index.html')` will find the correct precached\n     * response for the currently active service worker, even if the actual cache\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\n     *\n     * @param {string|Request} request The key (without revisioning parameters)\n     * to look up in the precache.\n     * @return {Promise<Response|undefined>}\n     */\n    async matchPrecache(request) {\n        const url = request instanceof Request ? request.url : request;\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (cacheKey) {\n            const cache = await self.caches.open(this.strategy.cacheName);\n            return cache.match(cacheKey);\n        }\n        return undefined;\n    }\n    /**\n     * Returns a function that looks up `url` in the precache (taking into\n     * account revision information), and returns the corresponding `Response`.\n     *\n     * @param {string} url The precached URL which will be used to lookup the\n     * `Response`.\n     * @return {workbox-routing~handlerCallback}\n     */\n    createHandlerBoundToURL(url) {\n        const cacheKey = this.getCacheKeyForURL(url);\n        if (!cacheKey) {\n            throw new WorkboxError('non-precached-url', { url });\n        }\n        return (options) => {\n            options.request = new Request(url);\n            options.params = Object.assign({ cacheKey }, options.params);\n            return this.strategy.handle(options);\n        };\n    }\n}\nexport { PrecacheController };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * `PrecacheFallbackPlugin` allows you to specify an \"offline fallback\"\n * response to be used when a given strategy is unable to generate a response.\n *\n * It does this by intercepting the `handlerDidError` plugin callback\n * and returning a precached response, taking the expected revision parameter\n * into account automatically.\n *\n * Unless you explicitly pass in a `PrecacheController` instance to the\n * constructor, the default instance will be used. Generally speaking, most\n * developers will end up using the default.\n *\n * @memberof workbox-precaching\n */\nclass PrecacheFallbackPlugin {\n    /**\n     * Constructs a new PrecacheFallbackPlugin with the associated fallbackURL.\n     *\n     * @param {Object} config\n     * @param {string} config.fallbackURL A precached URL to use as the fallback\n     *     if the associated strategy can't generate a response.\n     * @param {PrecacheController} [config.precacheController] An optional\n     *     PrecacheController instance. If not provided, the default\n     *     PrecacheController will be used.\n     */\n    constructor({ fallbackURL, precacheController, }) {\n        /**\n         * @return {Promise<Response>} The precache response for the fallback URL.\n         *\n         * @private\n         */\n        this.handlerDidError = () => this._precacheController.matchPrecache(this._fallbackURL);\n        this._fallbackURL = fallbackURL;\n        this._precacheController =\n            precacheController || getOrCreatePrecacheController();\n    }\n}\nexport { PrecacheFallbackPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { Route } from 'workbox-routing/Route.js';\nimport { generateURLVariations } from './utils/generateURLVariations.js';\nimport './_version.js';\n/**\n * A subclass of {@link workbox-routing.Route} that takes a\n * {@link workbox-precaching.PrecacheController}\n * instance and uses it to match incoming requests and handle fetching\n * responses from the precache.\n *\n * @memberof workbox-precaching\n * @extends workbox-routing.Route\n */\nclass PrecacheRoute extends Route {\n    /**\n     * @param {PrecacheController} precacheController A `PrecacheController`\n     * instance used to both match requests and respond to fetch events.\n     * @param {Object} [options] Options to control how requests are matched\n     * against the list of precached URLs.\n     * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\n     * check cache entries for a URLs ending with '/' to see if there is a hit when\n     * appending the `directoryIndex` value.\n     * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/, /^fbclid$/]] An\n     * array of regex's to remove search params when looking for a cache match.\n     * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\n     * check the cache for the URL with a `.html` added to the end of the end.\n     * @param {workbox-precaching~urlManipulation} [options.urlManipulation]\n     * This is a function that should take a URL and return an array of\n     * alternative URLs that should be checked for precache matches.\n     */\n    constructor(precacheController, options) {\n        const match = ({ request, }) => {\n            const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\n            for (const possibleURL of generateURLVariations(request.url, options)) {\n                const cacheKey = urlsToCacheKeys.get(possibleURL);\n                if (cacheKey) {\n                    const integrity = precacheController.getIntegrityForCacheKey(cacheKey);\n                    return { cacheKey, integrity };\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Precaching did not find a match for ` + getFriendlyURL(request.url));\n            }\n            return;\n        };\n        super(match, precacheController.strategy);\n    }\n}\nexport { PrecacheRoute };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { copyResponse } from 'workbox-core/copyResponse.js';\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from 'workbox-strategies/Strategy.js';\nimport './_version.js';\n/**\n * A {@link workbox-strategies.Strategy} implementation\n * specifically designed to work with\n * {@link workbox-precaching.PrecacheController}\n * to both cache and fetch precached assets.\n *\n * Note: an instance of this class is created automatically when creating a\n * `PrecacheController`; it's generally not necessary to create this yourself.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-precaching\n */\nclass PrecacheStrategy extends Strategy {\n    /**\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] {@link https://developers.google.com/web/tools/workbox/guides/using-plugins|Plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * {@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters|init}\n     * of all fetch() requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * {@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions|CacheQueryOptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     * @param {boolean} [options.fallbackToNetwork=true] Whether to attempt to\n     * get the response from the network if there's a precache miss.\n     */\n    constructor(options = {}) {\n        options.cacheName = cacheNames.getPrecacheName(options.cacheName);\n        super(options);\n        this._fallbackToNetwork =\n            options.fallbackToNetwork === false ? false : true;\n        // Redirected responses cannot be used to satisfy a navigation request, so\n        // any redirected response must be \"copied\" rather than cloned, so the new\n        // response doesn't contain the `redirected` flag. See:\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\n        this.plugins.push(PrecacheStrategy.copyRedirectedCacheableResponsesPlugin);\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const response = await handler.cacheMatch(request);\n        if (response) {\n            return response;\n        }\n        // If this is an `install` event for an entry that isn't already cached,\n        // then populate the cache.\n        if (handler.event && handler.event.type === 'install') {\n            return await this._handleInstall(request, handler);\n        }\n        // Getting here means something went wrong. An entry that should have been\n        // precached wasn't found in the cache.\n        return await this._handleFetch(request, handler);\n    }\n    async _handleFetch(request, handler) {\n        let response;\n        const params = (handler.params || {});\n        // Fall back to the network if we're configured to do so.\n        if (this._fallbackToNetwork) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.warn(`The precached response for ` +\n                    `${getFriendlyURL(request.url)} in ${this.cacheName} was not ` +\n                    `found. Falling back to the network.`);\n            }\n            const integrityInManifest = params.integrity;\n            const integrityInRequest = request.integrity;\n            const noIntegrityConflict = !integrityInRequest || integrityInRequest === integrityInManifest;\n            // Do not add integrity if the original request is no-cors\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            response = await handler.fetch(new Request(request, {\n                integrity: request.mode !== 'no-cors'\n                    ? integrityInRequest || integrityInManifest\n                    : undefined,\n            }));\n            // It's only \"safe\" to repair the cache if we're using SRI to guarantee\n            // that the response matches the precache manifest's expectations,\n            // and there's either a) no integrity property in the incoming request\n            // or b) there is an integrity, and it matches the precache manifest.\n            // See https://github.com/GoogleChrome/workbox/issues/2858\n            // Also if the original request users no-cors we don't use integrity.\n            // See https://github.com/GoogleChrome/workbox/issues/3096\n            if (integrityInManifest &&\n                noIntegrityConflict &&\n                request.mode !== 'no-cors') {\n                this._useDefaultCacheabilityPluginIfNeeded();\n                const wasCached = await handler.cachePut(request, response.clone());\n                if (process.env.NODE_ENV !== 'production') {\n                    if (wasCached) {\n                        logger.log(`A response for ${getFriendlyURL(request.url)} ` +\n                            `was used to \"repair\" the precache.`);\n                    }\n                }\n            }\n        }\n        else {\n            // This shouldn't normally happen, but there are edge cases:\n            // https://github.com/GoogleChrome/workbox/issues/1441\n            throw new WorkboxError('missing-precache-entry', {\n                cacheName: this.cacheName,\n                url: request.url,\n            });\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            const cacheKey = params.cacheKey || (await handler.getCacheKey(request, 'read'));\n            // Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Precaching is responding to: ` + getFriendlyURL(request.url));\n            logger.log(`Serving the precached url: ${getFriendlyURL(cacheKey instanceof Request ? cacheKey.url : cacheKey)}`);\n            logger.groupCollapsed(`View request details here.`);\n            logger.log(request);\n            logger.groupEnd();\n            logger.groupCollapsed(`View response details here.`);\n            logger.log(response);\n            logger.groupEnd();\n            logger.groupEnd();\n        }\n        return response;\n    }\n    async _handleInstall(request, handler) {\n        this._useDefaultCacheabilityPluginIfNeeded();\n        const response = await handler.fetch(request);\n        // Make sure we defer cachePut() until after we know the response\n        // should be cached; see https://github.com/GoogleChrome/workbox/issues/2737\n        const wasCached = await handler.cachePut(request, response.clone());\n        if (!wasCached) {\n            // Throwing here will lead to the `install` handler failing, which\n            // we want to do if *any* of the responses aren't safe to cache.\n            throw new WorkboxError('bad-precaching-response', {\n                url: request.url,\n                status: response.status,\n            });\n        }\n        return response;\n    }\n    /**\n     * This method is complex, as there a number of things to account for:\n     *\n     * The `plugins` array can be set at construction, and/or it might be added to\n     * to at any time before the strategy is used.\n     *\n     * At the time the strategy is used (i.e. during an `install` event), there\n     * needs to be at least one plugin that implements `cacheWillUpdate` in the\n     * array, other than `copyRedirectedCacheableResponsesPlugin`.\n     *\n     * - If this method is called and there are no suitable `cacheWillUpdate`\n     * plugins, we need to add `defaultPrecacheCacheabilityPlugin`.\n     *\n     * - If this method is called and there is exactly one `cacheWillUpdate`, then\n     * we don't have to do anything (this might be a previously added\n     * `defaultPrecacheCacheabilityPlugin`, or it might be a custom plugin).\n     *\n     * - If this method is called and there is more than one `cacheWillUpdate`,\n     * then we need to check if one is `defaultPrecacheCacheabilityPlugin`. If so,\n     * we need to remove it. (This situation is unlikely, but it could happen if\n     * the strategy is used multiple times, the first without a `cacheWillUpdate`,\n     * and then later on after manually adding a custom `cacheWillUpdate`.)\n     *\n     * See https://github.com/GoogleChrome/workbox/issues/2737 for more context.\n     *\n     * @private\n     */\n    _useDefaultCacheabilityPluginIfNeeded() {\n        let defaultPluginIndex = null;\n        let cacheWillUpdatePluginCount = 0;\n        for (const [index, plugin] of this.plugins.entries()) {\n            // Ignore the copy redirected plugin when determining what to do.\n            if (plugin === PrecacheStrategy.copyRedirectedCacheableResponsesPlugin) {\n                continue;\n            }\n            // Save the default plugin's index, in case it needs to be removed.\n            if (plugin === PrecacheStrategy.defaultPrecacheCacheabilityPlugin) {\n                defaultPluginIndex = index;\n            }\n            if (plugin.cacheWillUpdate) {\n                cacheWillUpdatePluginCount++;\n            }\n        }\n        if (cacheWillUpdatePluginCount === 0) {\n            this.plugins.push(PrecacheStrategy.defaultPrecacheCacheabilityPlugin);\n        }\n        else if (cacheWillUpdatePluginCount > 1 && defaultPluginIndex !== null) {\n            // Only remove the default plugin; multiple custom plugins are allowed.\n            this.plugins.splice(defaultPluginIndex, 1);\n        }\n        // Nothing needs to be done if cacheWillUpdatePluginCount is 1\n    }\n}\nPrecacheStrategy.defaultPrecacheCacheabilityPlugin = {\n    async cacheWillUpdate({ response }) {\n        if (!response || response.status >= 400) {\n            return null;\n        }\n        return response;\n    },\n};\nPrecacheStrategy.copyRedirectedCacheableResponsesPlugin = {\n    async cacheWillUpdate({ response }) {\n        return response.redirected ? await copyResponse(response) : response;\n    },\n};\nexport { PrecacheStrategy };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport './_version.js';\n// * * * IMPORTANT! * * *\n// ------------------------------------------------------------------------- //\n// jdsoc type definitions cannot be declared above TypeScript definitions or\n// they'll be stripped from the built `.js` files, and they'll only be in the\n// `d.ts` files, which aren't read by the jsdoc generator. As a result we\n// have to put declare them below.\n/**\n * @typedef {Object} InstallResult\n * @property {Array<string>} updatedURLs List of URLs that were updated during\n * installation.\n * @property {Array<string>} notUpdatedURLs List of URLs that were already up to\n * date.\n *\n * @memberof workbox-precaching\n */\n/**\n * @typedef {Object} CleanupResult\n * @property {Array<string>} deletedCacheRequests List of URLs that were deleted\n * while cleaning up the cache.\n *\n * @memberof workbox-precaching\n */\n/**\n * @typedef {Object} PrecacheEntry\n * @property {string} url URL to precache.\n * @property {string} [revision] Revision information for the URL.\n * @property {string} [integrity] Integrity metadata that will be used when\n * making the network request for the URL.\n *\n * @memberof workbox-precaching\n */\n/**\n * The \"urlManipulation\" callback can be used to determine if there are any\n * additional permutations of a URL that should be used to check against\n * the available precached files.\n *\n * For example, Workbox supports checking for '/index.html' when the URL\n * '/' is provided. This callback allows additional, custom checks.\n *\n * @callback ~urlManipulation\n * @param {Object} context\n * @param {URL} context.url The request's URL.\n * @return {Array<URL>} To add additional urls to test, return an Array of\n * URLs. Please note that these **should not be strings**, but URL objects.\n *\n * @memberof workbox-precaching\n */\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:precaching:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds plugins to the precaching strategy.\n *\n * @param {Array<Object>} plugins\n *\n * @memberof workbox-precaching\n */\nfunction addPlugins(plugins) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.strategy.plugins.push(...plugins);\n}\nexport { addPlugins };\n","/*\n  Copyright 2019 Google LLC\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { registerRoute } from 'workbox-routing/registerRoute.js';\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport './_version.js';\n/**\n * Add a `fetch` listener to the service worker that will\n * respond to\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\n * with precached assets.\n *\n * Requests for assets that aren't precached, the `FetchEvent` will not be\n * responded to, allowing the event to fall through to other `fetch` event\n * listeners.\n *\n * @param {Object} [options] See the {@link workbox-precaching.PrecacheRoute}\n * options.\n *\n * @memberof workbox-precaching\n */\nfunction addRoute(options) {\n    const precacheController = getOrCreatePrecacheController();\n    const precacheRoute = new PrecacheRoute(precacheController, options);\n    registerRoute(precacheRoute);\n}\nexport { addRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\nimport './_version.js';\n/**\n * Adds an `activate` event listener which will clean up incompatible\n * precaches that were created by older versions of Workbox.\n *\n * @memberof workbox-precaching\n */\nfunction cleanupOutdatedCaches() {\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n    self.addEventListener('activate', ((event) => {\n        const cacheName = cacheNames.getPrecacheName();\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (cachesDeleted.length > 0) {\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\n                        `automatically:`, cachesDeleted);\n                }\n            }\n        }));\n    }));\n}\nexport { cleanupOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#createHandlerBoundToURL} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call the\n * {@link PrecacheController#createHandlerBoundToURL} on that instance,\n * instead of using this function.\n *\n * @param {string} url The precached URL which will be used to lookup the\n * `Response`.\n * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\n * response from the network if there's a precache miss.\n * @return {workbox-routing~handlerCallback}\n *\n * @memberof workbox-precaching\n */\nfunction createHandlerBoundToURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.createHandlerBoundToURL(url);\n}\nexport { createHandlerBoundToURL };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Takes in a URL, and returns the corresponding URL that could be used to\n * lookup the entry in the precache.\n *\n * If a relative URL is provided, the location of the service worker file will\n * be used as the base.\n *\n * For precached entries without revision information, the cache key will be the\n * same as the original URL.\n *\n * For precached entries with revision information, the cache key will be the\n * original URL with the addition of a query parameter used for keeping track of\n * the revision info.\n *\n * @param {string} url The URL whose cache key to look up.\n * @return {string} The cache key that corresponds to that URL.\n *\n * @memberof workbox-precaching\n */\nfunction getCacheKeyForURL(url) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.getCacheKeyForURL(url);\n}\nexport { getCacheKeyForURL };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addPlugins } from './addPlugins.js';\nimport { addRoute } from './addRoute.js';\nimport { cleanupOutdatedCaches } from './cleanupOutdatedCaches.js';\nimport { createHandlerBoundToURL } from './createHandlerBoundToURL.js';\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\nimport { matchPrecache } from './matchPrecache.js';\nimport { precache } from './precache.js';\nimport { precacheAndRoute } from './precacheAndRoute.js';\nimport { PrecacheController } from './PrecacheController.js';\nimport { PrecacheRoute } from './PrecacheRoute.js';\nimport { PrecacheStrategy } from './PrecacheStrategy.js';\nimport { PrecacheFallbackPlugin } from './PrecacheFallbackPlugin.js';\nimport './_version.js';\n/**\n * Most consumers of this module will want to use the\n * {@link workbox-precaching.precacheAndRoute}\n * method to add assets to the cache and respond to network requests with these\n * cached assets.\n *\n * If you require more control over caching and routing, you can use the\n * {@link workbox-precaching.PrecacheController}\n * interface.\n *\n * @module workbox-precaching\n */\nexport { addPlugins, addRoute, cleanupOutdatedCaches, createHandlerBoundToURL, getCacheKeyForURL, matchPrecache, precache, precacheAndRoute, PrecacheController, PrecacheRoute, PrecacheStrategy, PrecacheFallbackPlugin, };\nexport * from './_types.js';\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Helper function that calls\n * {@link PrecacheController#matchPrecache} on the default\n * {@link PrecacheController} instance.\n *\n * If you are creating your own {@link PrecacheController}, then call\n * {@link PrecacheController#matchPrecache} on that instance,\n * instead of using this function.\n *\n * @param {string|Request} request The key (without revisioning parameters)\n * to look up in the precache.\n * @return {Promise<Response|undefined>}\n *\n * @memberof workbox-precaching\n */\nfunction matchPrecache(request) {\n    const precacheController = getOrCreatePrecacheController();\n    return precacheController.matchPrecache(request);\n}\nexport { matchPrecache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\nimport './_version.js';\n/**\n * Adds items to the precache list, removing any duplicates and\n * stores the files in the\n * {@link workbox-core.cacheNames|\"precache cache\"} when the service\n * worker installs.\n *\n * This method can be called multiple times.\n *\n * Please note: This method **will not** serve any of the cached files for you.\n * It only precaches files. To respond to a network request you call\n * {@link workbox-precaching.addRoute}.\n *\n * If you have a single array of files to precache, you can just call\n * {@link workbox-precaching.precacheAndRoute}.\n *\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\n *\n * @memberof workbox-precaching\n */\nfunction precache(entries) {\n    const precacheController = getOrCreatePrecacheController();\n    precacheController.precache(entries);\n}\nexport { precache };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { addRoute } from './addRoute.js';\nimport { precache } from './precache.js';\nimport './_version.js';\n/**\n * This method will add entries to the precache list and add a route to\n * respond to fetch events.\n *\n * This is a convenience method that will call\n * {@link workbox-precaching.precache} and\n * {@link workbox-precaching.addRoute} in a single call.\n *\n * @param {Array<Object|string>} entries Array of entries to precache.\n * @param {Object} [options] See the\n * {@link workbox-precaching.PrecacheRoute} options.\n *\n * @memberof workbox-precaching\n */\nfunction precacheAndRoute(entries, options) {\n    precache(entries);\n    addRoute(options);\n}\nexport { precacheAndRoute };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to translate URLs into\n * the corresponding cache key, based on the current revision info.\n *\n * @private\n */\nclass PrecacheCacheKeyPlugin {\n    constructor({ precacheController }) {\n        this.cacheKeyWillBeUsed = async ({ request, params, }) => {\n            // Params is type any, can't change right now.\n            /* eslint-disable */\n            const cacheKey = (params === null || params === void 0 ? void 0 : params.cacheKey) ||\n                this._precacheController.getCacheKeyForURL(request.url);\n            /* eslint-enable */\n            return cacheKey\n                ? new Request(cacheKey, { headers: request.headers })\n                : request;\n        };\n        this._precacheController = precacheController;\n    }\n}\nexport { PrecacheCacheKeyPlugin };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * A plugin, designed to be used with PrecacheController, to determine the\n * of assets that were updated (or not updated) during the install event.\n *\n * @private\n */\nclass PrecacheInstallReportPlugin {\n    constructor() {\n        this.updatedURLs = [];\n        this.notUpdatedURLs = [];\n        this.handlerWillStart = async ({ request, state, }) => {\n            // TODO: `state` should never be undefined...\n            if (state) {\n                state.originalRequest = request;\n            }\n        };\n        this.cachedResponseWillBeUsed = async ({ event, state, cachedResponse, }) => {\n            if (event.type === 'install') {\n                if (state &&\n                    state.originalRequest &&\n                    state.originalRequest instanceof Request) {\n                    // TODO: `state` should never be undefined...\n                    const url = state.originalRequest.url;\n                    if (cachedResponse) {\n                        this.notUpdatedURLs.push(url);\n                    }\n                    else {\n                        this.updatedURLs.push(url);\n                    }\n                }\n            }\n            return cachedResponse;\n        };\n    }\n}\nexport { PrecacheInstallReportPlugin };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport '../_version.js';\n// Name of the search parameter used to store revision info.\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\n/**\n * Converts a manifest entry into a versioned URL suitable for precaching.\n *\n * @param {Object|string} entry\n * @return {string} A URL with versioning info.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function createCacheKey(entry) {\n    if (!entry) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If a precache manifest entry is a string, it's assumed to be a versioned\n    // URL, like '/app.abcd1234.js'. Return as-is.\n    if (typeof entry === 'string') {\n        const urlObject = new URL(entry, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    const { revision, url } = entry;\n    if (!url) {\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\n    }\n    // If there's just a URL and no revision, then it's also assumed to be a\n    // versioned URL.\n    if (!revision) {\n        const urlObject = new URL(url, location.href);\n        return {\n            cacheKey: urlObject.href,\n            url: urlObject.href,\n        };\n    }\n    // Otherwise, construct a properly versioned URL using the custom Workbox\n    // search parameter along with the revision info.\n    const cacheKeyURL = new URL(url, location.href);\n    const originalURL = new URL(url, location.href);\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\n    return {\n        cacheKey: cacheKeyURL.href,\n        url: originalURL.href,\n    };\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nconst SUBSTRING_TO_FIND = '-precache-';\n/**\n * Cleans up incompatible precaches that were created by older versions of\n * Workbox, by a service worker registered under the current scope.\n *\n * This is meant to be called as part of the `activate` event.\n *\n * This should be safe to use as long as you don't include `substringToFind`\n * (defaulting to `-precache-`) in your non-precache cache names.\n *\n * @param {string} currentPrecacheName The cache name currently in use for\n * precaching. This cache won't be deleted.\n * @param {string} [substringToFind='-precache-'] Cache names which include this\n * substring will be deleted (excluding `currentPrecacheName`).\n * @return {Array<string>} A list of all the cache names that were deleted.\n *\n * @private\n * @memberof workbox-precaching\n */\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\n    const cacheNames = await self.caches.keys();\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\n        return (cacheName.includes(substringToFind) &&\n            cacheName.includes(self.registration.scope) &&\n            cacheName !== currentPrecacheName);\n    });\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\n    return cacheNamesToDelete;\n};\nexport { deleteOutdatedCaches };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\nimport '../_version.js';\n/**\n * Generator function that yields possible variations on the original URL to\n * check, one at a time.\n *\n * @param {string} url\n * @param {Object} options\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function* generateURLVariations(url, { ignoreURLParametersMatching = [/^utm_/, /^fbclid$/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) {\n    const urlObject = new URL(url, location.href);\n    urlObject.hash = '';\n    yield urlObject.href;\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\n    yield urlWithoutIgnoredParams.href;\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\n        directoryURL.pathname += directoryIndex;\n        yield directoryURL.href;\n    }\n    if (cleanURLs) {\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\n        cleanURL.pathname += '.html';\n        yield cleanURL.href;\n    }\n    if (urlManipulation) {\n        const additionalURLs = urlManipulation({ url: urlObject });\n        for (const urlToAttempt of additionalURLs) {\n            yield urlToAttempt.href;\n        }\n    }\n}\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { PrecacheController } from '../PrecacheController.js';\nimport '../_version.js';\nlet precacheController;\n/**\n * @return {PrecacheController}\n * @private\n */\nexport const getOrCreatePrecacheController = () => {\n    if (!precacheController) {\n        precacheController = new PrecacheController();\n    }\n    return precacheController;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} deletedURLs\n *\n * @private\n */\nconst logGroup = (groupTitle, deletedURLs) => {\n    logger.groupCollapsed(groupTitle);\n    for (const url of deletedURLs) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n};\n/**\n * @param {Array<string>} deletedURLs\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printCleanupDetails(deletedURLs) {\n    const deletionCount = deletedURLs.length;\n    if (deletionCount > 0) {\n        logger.groupCollapsed(`During precaching cleanup, ` +\n            `${deletionCount} cached ` +\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\n        logGroup('Deleted Cache Requests', deletedURLs);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport '../_version.js';\n/**\n * @param {string} groupTitle\n * @param {Array<string>} urls\n *\n * @private\n */\nfunction _nestedGroup(groupTitle, urls) {\n    if (urls.length === 0) {\n        return;\n    }\n    logger.groupCollapsed(groupTitle);\n    for (const url of urls) {\n        logger.log(url);\n    }\n    logger.groupEnd();\n}\n/**\n * @param {Array<string>} urlsToPrecache\n * @param {Array<string>} urlsAlreadyPrecached\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\n    const precachedCount = urlsToPrecache.length;\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\n    if (precachedCount || alreadyPrecachedCount) {\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\n        if (alreadyPrecachedCount > 0) {\n            message +=\n                ` ${alreadyPrecachedCount} ` +\n                    `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\n        }\n        logger.groupCollapsed(message);\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\n        logger.groupEnd();\n    }\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * Removes any URL search parameters that should be ignored.\n *\n * @param {URL} urlObject The original URL.\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\n * each search parameter name. Matches mean that the search parameter should be\n * ignored.\n * @return {URL} The URL with any ignored search parameters removed.\n *\n * @private\n * @memberof workbox-precaching\n */\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\n    // Convert the iterable into an array at the start of the loop to make sure\n    // deletion doesn't mess up iteration.\n    for (const paramName of [...urlObject.searchParams.keys()]) {\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\n            urlObject.searchParams.delete(paramName);\n        }\n    }\n    return urlObject;\n}\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * NavigationRoute makes it easy to create a\n * {@link workbox-routing.Route} that matches for browser\n * [navigation requests]{@link https://developers.google.com/web/fundamentals/primers/service-workers/high-performance-loading#first_what_are_navigation_requests}.\n *\n * It will only match incoming Requests whose\n * {@link https://fetch.spec.whatwg.org/#concept-request-mode|mode}\n * is set to `navigate`.\n *\n * You can optionally only apply this route to a subset of navigation requests\n * by using one or both of the `denylist` and `allowlist` parameters.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass NavigationRoute extends Route {\n    /**\n     * If both `denylist` and `allowlist` are provided, the `denylist` will\n     * take precedence and the request will not match this route.\n     *\n     * The regular expressions in `allowlist` and `denylist`\n     * are matched against the concatenated\n     * [`pathname`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/pathname}\n     * and [`search`]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLHyperlinkElementUtils/search}\n     * portions of the requested URL.\n     *\n     * *Note*: These RegExps may be evaluated against every destination URL during\n     * a navigation. Avoid using\n     * [complex RegExps](https://github.com/GoogleChrome/workbox/issues/3077),\n     * or else your users may see delays when navigating your site.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {Object} options\n     * @param {Array<RegExp>} [options.denylist] If any of these patterns match,\n     * the route will not handle the request (even if a allowlist RegExp matches).\n     * @param {Array<RegExp>} [options.allowlist=[/./]] If any of these patterns\n     * match the URL's pathname and search parameter, the route will handle the\n     * request (assuming the denylist doesn't match).\n     */\n    constructor(handler, { allowlist = [/./], denylist = [] } = {}) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isArrayOfClass(allowlist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.allowlist',\n            });\n            assert.isArrayOfClass(denylist, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'NavigationRoute',\n                funcName: 'constructor',\n                paramName: 'options.denylist',\n            });\n        }\n        super((options) => this._match(options), handler);\n        this._allowlist = allowlist;\n        this._denylist = denylist;\n    }\n    /**\n     * Routes match handler.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {Request} options.request\n     * @return {boolean}\n     *\n     * @private\n     */\n    _match({ url, request }) {\n        if (request && request.mode !== 'navigate') {\n            return false;\n        }\n        const pathnameAndSearch = url.pathname + url.search;\n        for (const regExp of this._denylist) {\n            if (regExp.test(pathnameAndSearch)) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                        `being used, since the URL matches this denylist pattern: ` +\n                        `${regExp.toString()}`);\n                }\n                return false;\n            }\n        }\n        if (this._allowlist.some((regExp) => regExp.test(pathnameAndSearch))) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`The navigation route ${pathnameAndSearch} ` + `is being used.`);\n            }\n            return true;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.log(`The navigation route ${pathnameAndSearch} is not ` +\n                `being used, since the URL being navigated to doesn't ` +\n                `match the allowlist.`);\n        }\n        return false;\n    }\n}\nexport { NavigationRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { Route } from './Route.js';\nimport './_version.js';\n/**\n * RegExpRoute makes it easy to create a regular expression based\n * {@link workbox-routing.Route}.\n *\n * For same-origin requests the RegExp only needs to match part of the URL. For\n * requests against third-party servers, you must define a RegExp that matches\n * the start of the URL.\n *\n * @memberof workbox-routing\n * @extends workbox-routing.Route\n */\nclass RegExpRoute extends Route {\n    /**\n     * If the regular expression contains\n     * [capture groups]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#grouping-back-references},\n     * the captured values will be passed to the\n     * {@link workbox-routing~handlerCallback} `params`\n     * argument.\n     *\n     * @param {RegExp} regExp The regular expression to match against URLs.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(regExp, handler, method) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(regExp, RegExp, {\n                moduleName: 'workbox-routing',\n                className: 'RegExpRoute',\n                funcName: 'constructor',\n                paramName: 'pattern',\n            });\n        }\n        const match = ({ url }) => {\n            const result = regExp.exec(url.href);\n            // Return immediately if there's no match.\n            if (!result) {\n                return;\n            }\n            // Require that the match start at the first character in the URL string\n            // if it's a cross-origin request.\n            // See https://github.com/GoogleChrome/workbox/issues/281 for the context\n            // behind this behavior.\n            if (url.origin !== location.origin && result.index !== 0) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`The regular expression '${regExp.toString()}' only partially matched ` +\n                        `against the cross-origin URL '${url.toString()}'. RegExpRoute's will only ` +\n                        `handle cross-origin requests if they match the entire URL.`);\n                }\n                return;\n            }\n            // If the route matches, but there aren't any capture groups defined, then\n            // this will return [], which is truthy and therefore sufficient to\n            // indicate a match.\n            // If there are capture groups, then it will return their values.\n            return result.slice(1);\n        };\n        super(match, handler, method);\n    }\n}\nexport { RegExpRoute };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { defaultMethod, validMethods } from './utils/constants.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport './_version.js';\n/**\n * A `Route` consists of a pair of callback functions, \"match\" and \"handler\".\n * The \"match\" callback determine if a route should be used to \"handle\" a\n * request by returning a non-falsy value if it can. The \"handler\" callback\n * is called when there is a match and should return a Promise that resolves\n * to a `Response`.\n *\n * @memberof workbox-routing\n */\nclass Route {\n    /**\n     * Constructor for Route class.\n     *\n     * @param {workbox-routing~matchCallback} match\n     * A callback function that determines whether the route matches a given\n     * `fetch` event by returning a non-falsy value.\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response.\n     * @param {string} [method='GET'] The HTTP method to match the Route\n     * against.\n     */\n    constructor(match, handler, method = defaultMethod) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(match, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'match',\n            });\n            if (method) {\n                assert.isOneOf(method, validMethods, { paramName: 'method' });\n            }\n        }\n        // These values are referenced directly by Router so cannot be\n        // altered by minificaton.\n        this.handler = normalizeHandler(handler);\n        this.match = match;\n        this.method = method;\n    }\n    /**\n     *\n     * @param {workbox-routing-handlerCallback} handler A callback\n     * function that returns a Promise resolving to a Response\n     */\n    setCatchHandler(handler) {\n        this.catchHandler = normalizeHandler(handler);\n    }\n}\nexport { Route };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { defaultMethod } from './utils/constants.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { normalizeHandler } from './utils/normalizeHandler.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\n/**\n * The Router can be used to process a `FetchEvent` using one or more\n * {@link workbox-routing.Route}, responding with a `Response` if\n * a matching route exists.\n *\n * If no route matches a given a request, the Router will use a \"default\"\n * handler if one is defined.\n *\n * Should the matching Route throw an error, the Router will use a \"catch\"\n * handler if one is defined to gracefully deal with issues and respond with a\n * Request.\n *\n * If a request matches multiple routes, the **earliest** registered route will\n * be used to respond to the request.\n *\n * @memberof workbox-routing\n */\nclass Router {\n    /**\n     * Initializes a new Router.\n     */\n    constructor() {\n        this._routes = new Map();\n        this._defaultHandlerMap = new Map();\n    }\n    /**\n     * @return {Map<string, Array<workbox-routing.Route>>} routes A `Map` of HTTP\n     * method name ('GET', etc.) to an array of all the corresponding `Route`\n     * instances that are registered.\n     */\n    get routes() {\n        return this._routes;\n    }\n    /**\n     * Adds a fetch event listener to respond to events when a route matches\n     * the event's request.\n     */\n    addFetchListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('fetch', ((event) => {\n            const { request } = event;\n            const responsePromise = this.handleRequest({ request, event });\n            if (responsePromise) {\n                event.respondWith(responsePromise);\n            }\n        }));\n    }\n    /**\n     * Adds a message event listener for URLs to cache from the window.\n     * This is useful to cache resources loaded on the page prior to when the\n     * service worker started controlling it.\n     *\n     * The format of the message data sent from the window should be as follows.\n     * Where the `urlsToCache` array may consist of URL strings or an array of\n     * URL string + `requestInit` object (the same as you'd pass to `fetch()`).\n     *\n     * ```\n     * {\n     *   type: 'CACHE_URLS',\n     *   payload: {\n     *     urlsToCache: [\n     *       './script1.js',\n     *       './script2.js',\n     *       ['./script3.js', {mode: 'no-cors'}],\n     *     ],\n     *   },\n     * }\n     * ```\n     */\n    addCacheListener() {\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\n        self.addEventListener('message', ((event) => {\n            // event.data is type 'any'\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            if (event.data && event.data.type === 'CACHE_URLS') {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                const { payload } = event.data;\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.debug(`Caching URLs from the window`, payload.urlsToCache);\n                }\n                const requestPromises = Promise.all(payload.urlsToCache.map((entry) => {\n                    if (typeof entry === 'string') {\n                        entry = [entry];\n                    }\n                    const request = new Request(...entry);\n                    return this.handleRequest({ request, event });\n                    // TODO(philipwalton): TypeScript errors without this typecast for\n                    // some reason (probably a bug). The real type here should work but\n                    // doesn't: `Array<Promise<Response> | undefined>`.\n                })); // TypeScript\n                event.waitUntil(requestPromises);\n                // If a MessageChannel was used, reply to the message on success.\n                if (event.ports && event.ports[0]) {\n                    void requestPromises.then(() => event.ports[0].postMessage(true));\n                }\n            }\n        }));\n    }\n    /**\n     * Apply the routing rules to a FetchEvent object to get a Response from an\n     * appropriate Route's handler.\n     *\n     * @param {Object} options\n     * @param {Request} options.request The request to handle.\n     * @param {ExtendableEvent} options.event The event that triggered the\n     *     request.\n     * @return {Promise<Response>|undefined} A promise is returned if a\n     *     registered route can handle the request. If there is no matching\n     *     route and there's no `defaultHandler`, `undefined` is returned.\n     */\n    handleRequest({ request, event, }) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'handleRequest',\n                paramName: 'options.request',\n            });\n        }\n        const url = new URL(request.url, location.href);\n        if (!url.protocol.startsWith('http')) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Workbox Router only supports URLs that start with 'http'.`);\n            }\n            return;\n        }\n        const sameOrigin = url.origin === location.origin;\n        const { params, route } = this.findMatchingRoute({\n            event,\n            request,\n            sameOrigin,\n            url,\n        });\n        let handler = route && route.handler;\n        const debugMessages = [];\n        if (process.env.NODE_ENV !== 'production') {\n            if (handler) {\n                debugMessages.push([`Found a route to handle this request:`, route]);\n                if (params) {\n                    debugMessages.push([\n                        `Passing the following params to the route's handler:`,\n                        params,\n                    ]);\n                }\n            }\n        }\n        // If we don't have a handler because there was no matching route, then\n        // fall back to defaultHandler if that's defined.\n        const method = request.method;\n        if (!handler && this._defaultHandlerMap.has(method)) {\n            if (process.env.NODE_ENV !== 'production') {\n                debugMessages.push(`Failed to find a matching route. Falling ` +\n                    `back to the default handler for ${method}.`);\n            }\n            handler = this._defaultHandlerMap.get(method);\n        }\n        if (!handler) {\n            if (process.env.NODE_ENV !== 'production') {\n                // No handler so Workbox will do nothing. If logs is set of debug\n                // i.e. verbose, we should print out this information.\n                logger.debug(`No route found for: ${getFriendlyURL(url)}`);\n            }\n            return;\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            // We have a handler, meaning Workbox is going to handle the route.\n            // print the routing details to the console.\n            logger.groupCollapsed(`Router is responding to: ${getFriendlyURL(url)}`);\n            debugMessages.forEach((msg) => {\n                if (Array.isArray(msg)) {\n                    logger.log(...msg);\n                }\n                else {\n                    logger.log(msg);\n                }\n            });\n            logger.groupEnd();\n        }\n        // Wrap in try and catch in case the handle method throws a synchronous\n        // error. It should still callback to the catch handler.\n        let responsePromise;\n        try {\n            responsePromise = handler.handle({ url, request, event, params });\n        }\n        catch (err) {\n            responsePromise = Promise.reject(err);\n        }\n        // Get route's catch handler, if it exists\n        const catchHandler = route && route.catchHandler;\n        if (responsePromise instanceof Promise &&\n            (this._catchHandler || catchHandler)) {\n            responsePromise = responsePromise.catch(async (err) => {\n                // If there's a route catch handler, process that first\n                if (catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to route's Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    try {\n                        return await catchHandler.handle({ url, request, event, params });\n                    }\n                    catch (catchErr) {\n                        if (catchErr instanceof Error) {\n                            err = catchErr;\n                        }\n                    }\n                }\n                if (this._catchHandler) {\n                    if (process.env.NODE_ENV !== 'production') {\n                        // Still include URL here as it will be async from the console group\n                        // and may not make sense without the URL\n                        logger.groupCollapsed(`Error thrown when responding to: ` +\n                            ` ${getFriendlyURL(url)}. Falling back to global Catch Handler.`);\n                        logger.error(`Error thrown by:`, route);\n                        logger.error(err);\n                        logger.groupEnd();\n                    }\n                    return this._catchHandler.handle({ url, request, event });\n                }\n                throw err;\n            });\n        }\n        return responsePromise;\n    }\n    /**\n     * Checks a request and URL (and optionally an event) against the list of\n     * registered routes, and if there's a match, returns the corresponding\n     * route along with any params generated by the match.\n     *\n     * @param {Object} options\n     * @param {URL} options.url\n     * @param {boolean} options.sameOrigin The result of comparing `url.origin`\n     *     against the current origin.\n     * @param {Request} options.request The request to match.\n     * @param {Event} options.event The corresponding event.\n     * @return {Object} An object with `route` and `params` properties.\n     *     They are populated if a matching route was found or `undefined`\n     *     otherwise.\n     */\n    findMatchingRoute({ url, sameOrigin, request, event, }) {\n        const routes = this._routes.get(request.method) || [];\n        for (const route of routes) {\n            let params;\n            // route.match returns type any, not possible to change right now.\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const matchResult = route.match({ url, sameOrigin, request, event });\n            if (matchResult) {\n                if (process.env.NODE_ENV !== 'production') {\n                    // Warn developers that using an async matchCallback is almost always\n                    // not the right thing to do.\n                    if (matchResult instanceof Promise) {\n                        logger.warn(`While routing ${getFriendlyURL(url)}, an async ` +\n                            `matchCallback function was used. Please convert the ` +\n                            `following route to use a synchronous matchCallback function:`, route);\n                    }\n                }\n                // See https://github.com/GoogleChrome/workbox/issues/2079\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                params = matchResult;\n                if (Array.isArray(params) && params.length === 0) {\n                    // Instead of passing an empty array in as params, use undefined.\n                    params = undefined;\n                }\n                else if (matchResult.constructor === Object && // eslint-disable-line\n                    Object.keys(matchResult).length === 0) {\n                    // Instead of passing an empty object in as params, use undefined.\n                    params = undefined;\n                }\n                else if (typeof matchResult === 'boolean') {\n                    // For the boolean value true (rather than just something truth-y),\n                    // don't set params.\n                    // See https://github.com/GoogleChrome/workbox/pull/2134#issuecomment-513924353\n                    params = undefined;\n                }\n                // Return early if have a match.\n                return { route, params };\n            }\n        }\n        // If no match was found above, return and empty object.\n        return {};\n    }\n    /**\n     * Define a default `handler` that's called when no routes explicitly\n     * match the incoming request.\n     *\n     * Each HTTP method ('GET', 'POST', etc.) gets its own default handler.\n     *\n     * Without a default handler, unmatched requests will go against the\n     * network as if there were no service worker present.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     * @param {string} [method='GET'] The HTTP method to associate with this\n     * default handler. Each method has its own default.\n     */\n    setDefaultHandler(handler, method = defaultMethod) {\n        this._defaultHandlerMap.set(method, normalizeHandler(handler));\n    }\n    /**\n     * If a Route throws an error while handling a request, this `handler`\n     * will be called and given a chance to provide a response.\n     *\n     * @param {workbox-routing~handlerCallback} handler A callback\n     * function that returns a Promise resulting in a Response.\n     */\n    setCatchHandler(handler) {\n        this._catchHandler = normalizeHandler(handler);\n    }\n    /**\n     * Registers a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to register.\n     */\n    registerRoute(route) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(route, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route, 'match', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.isType(route.handler, 'object', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route',\n            });\n            assert.hasMethod(route.handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.handler',\n            });\n            assert.isType(route.method, 'string', {\n                moduleName: 'workbox-routing',\n                className: 'Router',\n                funcName: 'registerRoute',\n                paramName: 'route.method',\n            });\n        }\n        if (!this._routes.has(route.method)) {\n            this._routes.set(route.method, []);\n        }\n        // Give precedence to all of the earlier routes by adding this additional\n        // route to the end of the array.\n        this._routes.get(route.method).push(route);\n    }\n    /**\n     * Unregisters a route with the router.\n     *\n     * @param {workbox-routing.Route} route The route to unregister.\n     */\n    unregisterRoute(route) {\n        if (!this._routes.has(route.method)) {\n            throw new WorkboxError('unregister-route-but-not-found-with-method', {\n                method: route.method,\n            });\n        }\n        const routeIndex = this._routes.get(route.method).indexOf(route);\n        if (routeIndex > -1) {\n            this._routes.get(route.method).splice(routeIndex, 1);\n        }\n        else {\n            throw new WorkboxError('unregister-route-route-not-registered');\n        }\n    }\n}\nexport { Router };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:routing:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { NavigationRoute, } from './NavigationRoute.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { registerRoute } from './registerRoute.js';\nimport { Route } from './Route.js';\nimport { Router } from './Router.js';\nimport { setCatchHandler } from './setCatchHandler.js';\nimport { setDefaultHandler } from './setDefaultHandler.js';\nimport './_version.js';\n/**\n * @module workbox-routing\n */\nexport { NavigationRoute, RegExpRoute, registerRoute, Route, Router, setCatchHandler, setDefaultHandler, };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Route } from './Route.js';\nimport { RegExpRoute } from './RegExpRoute.js';\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Easily register a RegExp, string, or function with a caching\n * strategy to a singleton Router instance.\n *\n * This method will generate a Route for you if needed and\n * call {@link workbox-routing.Router#registerRoute}.\n *\n * @param {RegExp|string|workbox-routing.Route~matchCallback|workbox-routing.Route} capture\n * If the capture param is a `Route`, all other arguments will be ignored.\n * @param {workbox-routing~handlerCallback} [handler] A callback\n * function that returns a Promise resulting in a Response. This parameter\n * is required if `capture` is not a `Route` object.\n * @param {string} [method='GET'] The HTTP method to match the Route\n * against.\n * @return {workbox-routing.Route} The generated `Route`.\n *\n * @memberof workbox-routing\n */\nfunction registerRoute(capture, handler, method) {\n    let route;\n    if (typeof capture === 'string') {\n        const captureUrl = new URL(capture, location.href);\n        if (process.env.NODE_ENV !== 'production') {\n            if (!(capture.startsWith('/') || capture.startsWith('http'))) {\n                throw new WorkboxError('invalid-string', {\n                    moduleName: 'workbox-routing',\n                    funcName: 'registerRoute',\n                    paramName: 'capture',\n                });\n            }\n            // We want to check if Express-style wildcards are in the pathname only.\n            // TODO: Remove this log message in v4.\n            const valueToCheck = capture.startsWith('http')\n                ? captureUrl.pathname\n                : capture;\n            // See https://github.com/pillarjs/path-to-regexp#parameters\n            const wildcards = '[*:?+]';\n            if (new RegExp(`${wildcards}`).exec(valueToCheck)) {\n                logger.debug(`The '$capture' parameter contains an Express-style wildcard ` +\n                    `character (${wildcards}). Strings are now always interpreted as ` +\n                    `exact matches; use a RegExp for partial or wildcard matches.`);\n            }\n        }\n        const matchCallback = ({ url }) => {\n            if (process.env.NODE_ENV !== 'production') {\n                if (url.pathname === captureUrl.pathname &&\n                    url.origin !== captureUrl.origin) {\n                    logger.debug(`${capture} only partially matches the cross-origin URL ` +\n                        `${url.toString()}. This route will only handle cross-origin requests ` +\n                        `if they match the entire URL.`);\n                }\n            }\n            return url.href === captureUrl.href;\n        };\n        // If `capture` is a string then `handler` and `method` must be present.\n        route = new Route(matchCallback, handler, method);\n    }\n    else if (capture instanceof RegExp) {\n        // If `capture` is a `RegExp` then `handler` and `method` must be present.\n        route = new RegExpRoute(capture, handler, method);\n    }\n    else if (typeof capture === 'function') {\n        // If `capture` is a function then `handler` and `method` must be present.\n        route = new Route(capture, handler, method);\n    }\n    else if (capture instanceof Route) {\n        route = capture;\n    }\n    else {\n        throw new WorkboxError('unsupported-route-type', {\n            moduleName: 'workbox-routing',\n            funcName: 'registerRoute',\n            paramName: 'capture',\n        });\n    }\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.registerRoute(route);\n    return route;\n}\nexport { registerRoute };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * If a Route throws an error while handling a request, this `handler`\n * will be called and given a chance to provide a response.\n *\n * @param {workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof workbox-routing\n */\nfunction setCatchHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setCatchHandler(handler);\n}\nexport { setCatchHandler };\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { getOrCreateDefaultRouter } from './utils/getOrCreateDefaultRouter.js';\nimport './_version.js';\n/**\n * Define a default `handler` that's called when no routes explicitly\n * match the incoming request.\n *\n * Without a default handler, unmatched requests will go against the\n * network as if there were no service worker present.\n *\n * @param {workbox-routing~handlerCallback} handler A callback\n * function that returns a Promise resulting in a Response.\n *\n * @memberof workbox-routing\n */\nfunction setDefaultHandler(handler) {\n    const defaultRouter = getOrCreateDefaultRouter();\n    defaultRouter.setDefaultHandler(handler);\n}\nexport { setDefaultHandler };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\n/**\n * The default HTTP method, 'GET', used when there's no specific method\n * configured for a route.\n *\n * @type {string}\n *\n * @private\n */\nexport const defaultMethod = 'GET';\n/**\n * The list of valid HTTP methods associated with requests that could be routed.\n *\n * @type {Array<string>}\n *\n * @private\n */\nexport const validMethods = [\n    'DELETE',\n    'GET',\n    'HEAD',\n    'PATCH',\n    'POST',\n    'PUT',\n];\n","/*\n  Copyright 2019 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { Router } from '../Router.js';\nimport '../_version.js';\nlet defaultRouter;\n/**\n * Creates a new, singleton Router instance if one does not exist. If one\n * does already exist, that instance is returned.\n *\n * @private\n * @return {Router}\n */\nexport const getOrCreateDefaultRouter = () => {\n    if (!defaultRouter) {\n        defaultRouter = new Router();\n        // The helpers that use the default Router assume these listeners exist.\n        defaultRouter.addFetchListener();\n        defaultRouter.addCacheListener();\n    }\n    return defaultRouter;\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport '../_version.js';\n/**\n * @param {function()|Object} handler Either a function, or an object with a\n * 'handle' method.\n * @return {Object} An object with a handle method.\n *\n * @private\n */\nexport const normalizeHandler = (handler) => {\n    if (handler && typeof handler === 'object') {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.hasMethod(handler, 'handle', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return handler;\n    }\n    else {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isType(handler, 'function', {\n                moduleName: 'workbox-routing',\n                className: 'Route',\n                funcName: 'constructor',\n                paramName: 'handler',\n            });\n        }\n        return { handle: handler };\n    }\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-first-falling-back-to-network)\n * request strategy.\n *\n * A cache first strategy is useful for assets that have been revisioned,\n * such as URLs like `/styles/example.a8f5f1.css`, since they\n * can be cached for long periods of time.\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheFirst extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        let response = await handler.cacheMatch(request);\n        let error = undefined;\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will respond with a network request.`);\n            }\n            try {\n                response = await handler.fetchAndCachePut(request);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Got response from network.`);\n                }\n                else {\n                    logs.push(`Unable to get a response from the network.`);\n                }\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}' cache.`);\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { CacheFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a [cache-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#cache-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If there is no cache match, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass CacheOnly extends Strategy {\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'makeRequest',\n                paramName: 'request',\n            });\n        }\n        const response = await handler.cacheMatch(request);\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Found a cached response in the '${this.cacheName}' ` + `cache.`);\n                messages.printFinalResponse(response);\n            }\n            else {\n                logger.log(`No response found in the '${this.cacheName}' cache.`);\n            }\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n}\nexport { CacheOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network first](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-first-falling-back-to-cache)\n * request strategy.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkFirst extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will fallback to the cache.\n     *\n     * This option can be used to combat\n     * \"[lie-fi]{@link https://developers.google.com/web/fundamentals/performance/poor-connectivity/#lie-fi}\"\n     * scenarios.\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n        if (process.env.NODE_ENV !== 'production') {\n            if (this._networkTimeoutSeconds) {\n                assert.isType(this._networkTimeoutSeconds, 'number', {\n                    moduleName: 'workbox-strategies',\n                    className: this.constructor.name,\n                    funcName: 'constructor',\n                    paramName: 'networkTimeoutSeconds',\n                });\n            }\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'makeRequest',\n            });\n        }\n        const promises = [];\n        let timeoutId;\n        if (this._networkTimeoutSeconds) {\n            const { id, promise } = this._getTimeoutPromise({ request, logs, handler });\n            timeoutId = id;\n            promises.push(promise);\n        }\n        const networkPromise = this._getNetworkPromise({\n            timeoutId,\n            request,\n            logs,\n            handler,\n        });\n        promises.push(networkPromise);\n        const response = await handler.waitUntil((async () => {\n            // Promise.race() will resolve as soon as the first promise resolves.\n            return ((await handler.waitUntil(Promise.race(promises))) ||\n                // If Promise.race() resolved with null, it might be due to a network\n                // timeout + a cache miss. If that were to happen, we'd rather wait until\n                // the networkPromise resolves instead of returning null.\n                // Note that it's fine to await an already-resolved promise, so we don't\n                // have to check to see if it's still \"in flight\".\n                (await networkPromise));\n        })());\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url });\n        }\n        return response;\n    }\n    /**\n     * @param {Object} options\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs array\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    _getTimeoutPromise({ request, logs, handler, }) {\n        let timeoutId;\n        const timeoutPromise = new Promise((resolve) => {\n            const onNetworkTimeout = async () => {\n                if (process.env.NODE_ENV !== 'production') {\n                    logs.push(`Timing out the network response at ` +\n                        `${this._networkTimeoutSeconds} seconds.`);\n                }\n                resolve(await handler.cacheMatch(request));\n            };\n            timeoutId = setTimeout(onNetworkTimeout, this._networkTimeoutSeconds * 1000);\n        });\n        return {\n            promise: timeoutPromise,\n            id: timeoutId,\n        };\n    }\n    /**\n     * @param {Object} options\n     * @param {number|undefined} options.timeoutId\n     * @param {Request} options.request\n     * @param {Array} options.logs A reference to the logs Array.\n     * @param {Event} options.event\n     * @return {Promise<Response>}\n     *\n     * @private\n     */\n    async _getNetworkPromise({ timeoutId, request, logs, handler, }) {\n        let error;\n        let response;\n        try {\n            response = await handler.fetchAndCachePut(request);\n        }\n        catch (fetchError) {\n            if (fetchError instanceof Error) {\n                error = fetchError;\n            }\n        }\n        if (timeoutId) {\n            clearTimeout(timeoutId);\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            if (response) {\n                logs.push(`Got response from network.`);\n            }\n            else {\n                logs.push(`Unable to get a response from the network. Will respond ` +\n                    `with a cached response.`);\n            }\n        }\n        if (error || !response) {\n            response = await handler.cacheMatch(request);\n            if (process.env.NODE_ENV !== 'production') {\n                if (response) {\n                    logs.push(`Found a cached response in the '${this.cacheName}'` + ` cache.`);\n                }\n                else {\n                    logs.push(`No response found in the '${this.cacheName}' cache.`);\n                }\n            }\n        }\n        return response;\n    }\n}\nexport { NetworkFirst };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [network-only](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#network-only)\n * request strategy.\n *\n * This class is useful if you want to take advantage of any\n * [Workbox plugins](https://developer.chrome.com/docs/workbox/using-plugins/).\n *\n * If the network request fails, this will throw a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass NetworkOnly extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {number} [options.networkTimeoutSeconds] If set, any network requests\n     * that fail to respond within the timeout will result in a network error.\n     */\n    constructor(options = {}) {\n        super(options);\n        this._networkTimeoutSeconds = options.networkTimeoutSeconds || 0;\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: '_handle',\n                paramName: 'request',\n            });\n        }\n        let error = undefined;\n        let response;\n        try {\n            const promises = [\n                handler.fetch(request),\n            ];\n            if (this._networkTimeoutSeconds) {\n                const timeoutPromise = timeout(this._networkTimeoutSeconds * 1000);\n                promises.push(timeoutPromise);\n            }\n            response = await Promise.race(promises);\n            if (!response) {\n                throw new Error(`Timed out the network response after ` +\n                    `${this._networkTimeoutSeconds} seconds.`);\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                error = err;\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            if (response) {\n                logger.log(`Got response from network.`);\n            }\n            else {\n                logger.log(`Unable to get a response from the network.`);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { NetworkOnly };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { cacheOkAndOpaquePlugin } from './plugins/cacheOkAndOpaquePlugin.js';\nimport { Strategy } from './Strategy.js';\nimport { messages } from './utils/messages.js';\nimport './_version.js';\n/**\n * An implementation of a\n * [stale-while-revalidate](https://developer.chrome.com/docs/workbox/caching-strategies-overview/#stale-while-revalidate)\n * request strategy.\n *\n * Resources are requested from both the cache and the network in parallel.\n * The strategy will respond with the cached version if available, otherwise\n * wait for the network response. The cache is updated with the network response\n * with each successful request.\n *\n * By default, this strategy will cache responses with a 200 status code as\n * well as [opaque responses](https://developer.chrome.com/docs/workbox/caching-resources-during-runtime/#opaque-responses).\n * Opaque responses are cross-origin requests where the response doesn't\n * support [CORS](https://enable-cors.org/).\n *\n * If the network request fails, and there is no cache match, this will throw\n * a `WorkboxError` exception.\n *\n * @extends workbox-strategies.Strategy\n * @memberof workbox-strategies\n */\nclass StaleWhileRevalidate extends Strategy {\n    /**\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] [`CacheQueryOptions`](https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions)\n     */\n    constructor(options = {}) {\n        super(options);\n        // If this instance contains no plugins with a 'cacheWillUpdate' callback,\n        // prepend the `cacheOkAndOpaquePlugin` plugin to the plugins list.\n        if (!this.plugins.some((p) => 'cacheWillUpdate' in p)) {\n            this.plugins.unshift(cacheOkAndOpaquePlugin);\n        }\n    }\n    /**\n     * @private\n     * @param {Request|string} request A request to run this strategy for.\n     * @param {workbox-strategies.StrategyHandler} handler The event that\n     *     triggered the request.\n     * @return {Promise<Response>}\n     */\n    async _handle(request, handler) {\n        const logs = [];\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(request, Request, {\n                moduleName: 'workbox-strategies',\n                className: this.constructor.name,\n                funcName: 'handle',\n                paramName: 'request',\n            });\n        }\n        const fetchAndCachePromise = handler.fetchAndCachePut(request).catch(() => {\n            // Swallow this error because a 'no-response' error will be thrown in\n            // main handler return flow. This will be in the `waitUntil()` flow.\n        });\n        void handler.waitUntil(fetchAndCachePromise);\n        let response = await handler.cacheMatch(request);\n        let error;\n        if (response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`Found a cached response in the '${this.cacheName}'` +\n                    ` cache. Will update with the network response in the background.`);\n            }\n        }\n        else {\n            if (process.env.NODE_ENV !== 'production') {\n                logs.push(`No response found in the '${this.cacheName}' cache. ` +\n                    `Will wait for the network response.`);\n            }\n            try {\n                // NOTE(philipwalton): Really annoying that we have to type cast here.\n                // https://github.com/microsoft/TypeScript/issues/20006\n                response = (await fetchAndCachePromise);\n            }\n            catch (err) {\n                if (err instanceof Error) {\n                    error = err;\n                }\n            }\n        }\n        if (process.env.NODE_ENV !== 'production') {\n            logger.groupCollapsed(messages.strategyStart(this.constructor.name, request));\n            for (const log of logs) {\n                logger.log(log);\n            }\n            messages.printFinalResponse(response);\n            logger.groupEnd();\n        }\n        if (!response) {\n            throw new WorkboxError('no-response', { url: request.url, error });\n        }\n        return response;\n    }\n}\nexport { StaleWhileRevalidate };\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * An abstract base class that all other strategy classes must extend from:\n *\n * @memberof workbox-strategies\n */\nclass Strategy {\n    /**\n     * Creates a new instance of the strategy and sets all documented option\n     * properties as public instance properties.\n     *\n     * Note: if a custom strategy class extends the base Strategy class and does\n     * not need more than these properties, it does not need to define its own\n     * constructor.\n     *\n     * @param {Object} [options]\n     * @param {string} [options.cacheName] Cache name to store and retrieve\n     * requests. Defaults to the cache names provided by\n     * {@link workbox-core.cacheNames}.\n     * @param {Array<Object>} [options.plugins] [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n     * to use in conjunction with this caching strategy.\n     * @param {Object} [options.fetchOptions] Values passed along to the\n     * [`init`](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters)\n     * of [non-navigation](https://github.com/GoogleChrome/workbox/issues/1796)\n     * `fetch()` requests made by this strategy.\n     * @param {Object} [options.matchOptions] The\n     * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n     * for any `cache.match()` or `cache.put()` calls made by this strategy.\n     */\n    constructor(options = {}) {\n        /**\n         * Cache name to store and retrieve\n         * requests. Defaults to the cache names provided by\n         * {@link workbox-core.cacheNames}.\n         *\n         * @type {string}\n         */\n        this.cacheName = cacheNames.getRuntimeName(options.cacheName);\n        /**\n         * The list\n         * [Plugins]{@link https://developers.google.com/web/tools/workbox/guides/using-plugins}\n         * used by this strategy.\n         *\n         * @type {Array<Object>}\n         */\n        this.plugins = options.plugins || [];\n        /**\n         * Values passed along to the\n         * [`init`]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch#Parameters}\n         * of all fetch() requests made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.fetchOptions = options.fetchOptions;\n        /**\n         * The\n         * [`CacheQueryOptions`]{@link https://w3c.github.io/ServiceWorker/#dictdef-cachequeryoptions}\n         * for any `cache.match()` or `cache.put()` calls made by this strategy.\n         *\n         * @type {Object}\n         */\n        this.matchOptions = options.matchOptions;\n    }\n    /**\n     * Perform a request strategy and returns a `Promise` that will resolve with\n     * a `Response`, invoking all relevant plugin callbacks.\n     *\n     * When a strategy instance is registered with a Workbox\n     * {@link workbox-routing.Route}, this method is automatically\n     * called when the route matches.\n     *\n     * Alternatively, this method can be used in a standalone `FetchEvent`\n     * listener by passing it to `event.respondWith()`.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     */\n    handle(options) {\n        const [responseDone] = this.handleAll(options);\n        return responseDone;\n    }\n    /**\n     * Similar to {@link workbox-strategies.Strategy~handle}, but\n     * instead of just returning a `Promise` that resolves to a `Response` it\n     * it will return an tuple of `[response, done]` promises, where the former\n     * (`response`) is equivalent to what `handle()` returns, and the latter is a\n     * Promise that will resolve once any promises that were added to\n     * `event.waitUntil()` as part of performing the strategy have completed.\n     *\n     * You can await the `done` promise to ensure any extra work performed by\n     * the strategy (usually caching responses) completes successfully.\n     *\n     * @param {FetchEvent|Object} options A `FetchEvent` or an object with the\n     *     properties listed below.\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params]\n     * @return {Array<Promise>} A tuple of [response, done]\n     *     promises that can be used to determine when the response resolves as\n     *     well as when the handler has completed all its work.\n     */\n    handleAll(options) {\n        // Allow for flexible options to be passed.\n        if (options instanceof FetchEvent) {\n            options = {\n                event: options,\n                request: options.request,\n            };\n        }\n        const event = options.event;\n        const request = typeof options.request === 'string'\n            ? new Request(options.request)\n            : options.request;\n        const params = 'params' in options ? options.params : undefined;\n        const handler = new StrategyHandler(this, { event, request, params });\n        const responseDone = this._getResponse(handler, request, event);\n        const handlerDone = this._awaitComplete(responseDone, handler, request, event);\n        // Return an array of promises, suitable for use with Promise.all().\n        return [responseDone, handlerDone];\n    }\n    async _getResponse(handler, request, event) {\n        await handler.runCallbacks('handlerWillStart', { event, request });\n        let response = undefined;\n        try {\n            response = await this._handle(request, handler);\n            // The \"official\" Strategy subclasses all throw this error automatically,\n            // but in case a third-party Strategy doesn't, ensure that we have a\n            // consistent failure when there's no response or an error response.\n            if (!response || response.type === 'error') {\n                throw new WorkboxError('no-response', { url: request.url });\n            }\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                for (const callback of handler.iterateCallbacks('handlerDidError')) {\n                    response = await callback({ error, event, request });\n                    if (response) {\n                        break;\n                    }\n                }\n            }\n            if (!response) {\n                throw error;\n            }\n            else if (process.env.NODE_ENV !== 'production') {\n                logger.log(`While responding to '${getFriendlyURL(request.url)}', ` +\n                    `an ${error instanceof Error ? error.toString() : ''} error occurred. Using a fallback response provided by ` +\n                    `a handlerDidError plugin.`);\n            }\n        }\n        for (const callback of handler.iterateCallbacks('handlerWillRespond')) {\n            response = await callback({ event, request, response });\n        }\n        return response;\n    }\n    async _awaitComplete(responseDone, handler, request, event) {\n        let response;\n        let error;\n        try {\n            response = await responseDone;\n        }\n        catch (error) {\n            // Ignore errors, as response errors should be caught via the `response`\n            // promise above. The `done` promise will only throw for errors in\n            // promises passed to `handler.waitUntil()`.\n        }\n        try {\n            await handler.runCallbacks('handlerDidRespond', {\n                event,\n                request,\n                response,\n            });\n            await handler.doneWaiting();\n        }\n        catch (waitUntilError) {\n            if (waitUntilError instanceof Error) {\n                error = waitUntilError;\n            }\n        }\n        await handler.runCallbacks('handlerDidComplete', {\n            event,\n            request,\n            response,\n            error: error,\n        });\n        handler.destroy();\n        if (error) {\n            throw error;\n        }\n    }\n}\nexport { Strategy };\n/**\n * Classes extending the `Strategy` based class should implement this method,\n * and leverage the {@link workbox-strategies.StrategyHandler}\n * arg to perform all fetching and cache logic, which will ensure all relevant\n * cache, cache options, fetch options and plugins are used (per the current\n * strategy instance).\n *\n * @name _handle\n * @instance\n * @abstract\n * @function\n * @param {Request} request\n * @param {workbox-strategies.StrategyHandler} handler\n * @return {Promise<Response>}\n *\n * @memberof workbox-strategies.Strategy\n */\n","/*\n  Copyright 2020 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { assert } from 'workbox-core/_private/assert.js';\nimport { cacheMatchIgnoreParams } from 'workbox-core/_private/cacheMatchIgnoreParams.js';\nimport { Deferred } from 'workbox-core/_private/Deferred.js';\nimport { executeQuotaErrorCallbacks } from 'workbox-core/_private/executeQuotaErrorCallbacks.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { timeout } from 'workbox-core/_private/timeout.js';\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\nimport './_version.js';\nfunction toRequest(input) {\n    return typeof input === 'string' ? new Request(input) : input;\n}\n/**\n * A class created every time a Strategy instance instance calls\n * {@link workbox-strategies.Strategy~handle} or\n * {@link workbox-strategies.Strategy~handleAll} that wraps all fetch and\n * cache actions around plugin callbacks and keeps track of when the strategy\n * is \"done\" (i.e. all added `event.waitUntil()` promises have resolved).\n *\n * @memberof workbox-strategies\n */\nclass StrategyHandler {\n    /**\n     * Creates a new instance associated with the passed strategy and event\n     * that's handling the request.\n     *\n     * The constructor also initializes the state that will be passed to each of\n     * the plugins handling this request.\n     *\n     * @param {workbox-strategies.Strategy} strategy\n     * @param {Object} options\n     * @param {Request|string} options.request A request to run this strategy for.\n     * @param {ExtendableEvent} options.event The event associated with the\n     *     request.\n     * @param {URL} [options.url]\n     * @param {*} [options.params] The return value from the\n     *     {@link workbox-routing~matchCallback} (if applicable).\n     */\n    constructor(strategy, options) {\n        this._cacheKeys = {};\n        /**\n         * The request the strategy is performing (passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * @name request\n         * @instance\n         * @type {Request}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * The event associated with this request.\n         * @name event\n         * @instance\n         * @type {ExtendableEvent}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `URL` instance of `request.url` (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `url` param will be present if the strategy was invoked\n         * from a workbox `Route` object.\n         * @name url\n         * @instance\n         * @type {URL|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        /**\n         * A `param` value (if passed to the strategy's\n         * `handle()` or `handleAll()` method).\n         * Note: the `param` param will be present if the strategy was invoked\n         * from a workbox `Route` object and the\n         * {@link workbox-routing~matchCallback} returned\n         * a truthy value (it will be that value).\n         * @name params\n         * @instance\n         * @type {*|undefined}\n         * @memberof workbox-strategies.StrategyHandler\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            assert.isInstance(options.event, ExtendableEvent, {\n                moduleName: 'workbox-strategies',\n                className: 'StrategyHandler',\n                funcName: 'constructor',\n                paramName: 'options.event',\n            });\n        }\n        Object.assign(this, options);\n        this.event = options.event;\n        this._strategy = strategy;\n        this._handlerDeferred = new Deferred();\n        this._extendLifetimePromises = [];\n        // Copy the plugins list (since it's mutable on the strategy),\n        // so any mutations don't affect this handler instance.\n        this._plugins = [...strategy.plugins];\n        this._pluginStateMap = new Map();\n        for (const plugin of this._plugins) {\n            this._pluginStateMap.set(plugin, {});\n        }\n        this.event.waitUntil(this._handlerDeferred.promise);\n    }\n    /**\n     * Fetches a given request (and invokes any applicable plugin callback\n     * methods) using the `fetchOptions` (for non-navigation requests) and\n     * `plugins` defined on the `Strategy` object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - `requestWillFetch()`\n     * - `fetchDidSucceed()`\n     * - `fetchDidFail()`\n     *\n     * @param {Request|string} input The URL or request to fetch.\n     * @return {Promise<Response>}\n     */\n    async fetch(input) {\n        const { event } = this;\n        let request = toRequest(input);\n        if (request.mode === 'navigate' &&\n            event instanceof FetchEvent &&\n            event.preloadResponse) {\n            const possiblePreloadResponse = (await event.preloadResponse);\n            if (possiblePreloadResponse) {\n                if (process.env.NODE_ENV !== 'production') {\n                    logger.log(`Using a preloaded navigation response for ` +\n                        `'${getFriendlyURL(request.url)}'`);\n                }\n                return possiblePreloadResponse;\n            }\n        }\n        // If there is a fetchDidFail plugin, we need to save a clone of the\n        // original request before it's either modified by a requestWillFetch\n        // plugin or before the original request's body is consumed via fetch().\n        const originalRequest = this.hasCallback('fetchDidFail')\n            ? request.clone()\n            : null;\n        try {\n            for (const cb of this.iterateCallbacks('requestWillFetch')) {\n                request = await cb({ request: request.clone(), event });\n            }\n        }\n        catch (err) {\n            if (err instanceof Error) {\n                throw new WorkboxError('plugin-error-request-will-fetch', {\n                    thrownErrorMessage: err.message,\n                });\n            }\n        }\n        // The request can be altered by plugins with `requestWillFetch` making\n        // the original request (most likely from a `fetch` event) different\n        // from the Request we make. Pass both to `fetchDidFail` to aid debugging.\n        const pluginFilteredRequest = request.clone();\n        try {\n            let fetchResponse;\n            // See https://github.com/GoogleChrome/workbox/issues/1796\n            fetchResponse = await fetch(request, request.mode === 'navigate' ? undefined : this._strategy.fetchOptions);\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' returned a response with ` +\n                    `status '${fetchResponse.status}'.`);\n            }\n            for (const callback of this.iterateCallbacks('fetchDidSucceed')) {\n                fetchResponse = await callback({\n                    event,\n                    request: pluginFilteredRequest,\n                    response: fetchResponse,\n                });\n            }\n            return fetchResponse;\n        }\n        catch (error) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.log(`Network request for ` +\n                    `'${getFriendlyURL(request.url)}' threw an error.`, error);\n            }\n            // `originalRequest` will only exist if a `fetchDidFail` callback\n            // is being used (see above).\n            if (originalRequest) {\n                await this.runCallbacks('fetchDidFail', {\n                    error: error,\n                    event,\n                    originalRequest: originalRequest.clone(),\n                    request: pluginFilteredRequest.clone(),\n                });\n            }\n            throw error;\n        }\n    }\n    /**\n     * Calls `this.fetch()` and (in the background) runs `this.cachePut()` on\n     * the response generated by `this.fetch()`.\n     *\n     * The call to `this.cachePut()` automatically invokes `this.waitUntil()`,\n     * so you do not have to manually call `waitUntil()` on the event.\n     *\n     * @param {Request|string} input The request or URL to fetch and cache.\n     * @return {Promise<Response>}\n     */\n    async fetchAndCachePut(input) {\n        const response = await this.fetch(input);\n        const responseClone = response.clone();\n        void this.waitUntil(this.cachePut(input, responseClone));\n        return response;\n    }\n    /**\n     * Matches a request from the cache (and invokes any applicable plugin\n     * callback methods) using the `cacheName`, `matchOptions`, and `plugins`\n     * defined on the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cachedResponseWillByUsed()\n     *\n     * @param {Request|string} key The Request or URL to use as the cache key.\n     * @return {Promise<Response|undefined>} A matching response, if found.\n     */\n    async cacheMatch(key) {\n        const request = toRequest(key);\n        let cachedResponse;\n        const { cacheName, matchOptions } = this._strategy;\n        const effectiveRequest = await this.getCacheKey(request, 'read');\n        const multiMatchOptions = Object.assign(Object.assign({}, matchOptions), { cacheName });\n        cachedResponse = await caches.match(effectiveRequest, multiMatchOptions);\n        if (process.env.NODE_ENV !== 'production') {\n            if (cachedResponse) {\n                logger.debug(`Found a cached response in '${cacheName}'.`);\n            }\n            else {\n                logger.debug(`No cached response found in '${cacheName}'.`);\n            }\n        }\n        for (const callback of this.iterateCallbacks('cachedResponseWillBeUsed')) {\n            cachedResponse =\n                (await callback({\n                    cacheName,\n                    matchOptions,\n                    cachedResponse,\n                    request: effectiveRequest,\n                    event: this.event,\n                })) || undefined;\n        }\n        return cachedResponse;\n    }\n    /**\n     * Puts a request/response pair in the cache (and invokes any applicable\n     * plugin callback methods) using the `cacheName` and `plugins` defined on\n     * the strategy object.\n     *\n     * The following plugin lifecycle methods are invoked when using this method:\n     * - cacheKeyWillByUsed()\n     * - cacheWillUpdate()\n     * - cacheDidUpdate()\n     *\n     * @param {Request|string} key The request or URL to use as the cache key.\n     * @param {Response} response The response to cache.\n     * @return {Promise<boolean>} `false` if a cacheWillUpdate caused the response\n     * not be cached, and `true` otherwise.\n     */\n    async cachePut(key, response) {\n        const request = toRequest(key);\n        // Run in the next task to avoid blocking other cache reads.\n        // https://github.com/w3c/ServiceWorker/issues/1397\n        await timeout(0);\n        const effectiveRequest = await this.getCacheKey(request, 'write');\n        if (process.env.NODE_ENV !== 'production') {\n            if (effectiveRequest.method && effectiveRequest.method !== 'GET') {\n                throw new WorkboxError('attempt-to-cache-non-get-request', {\n                    url: getFriendlyURL(effectiveRequest.url),\n                    method: effectiveRequest.method,\n                });\n            }\n            // See https://github.com/GoogleChrome/workbox/issues/2818\n            const vary = response.headers.get('Vary');\n            if (vary) {\n                logger.debug(`The response for ${getFriendlyURL(effectiveRequest.url)} ` +\n                    `has a 'Vary: ${vary}' header. ` +\n                    `Consider setting the {ignoreVary: true} option on your strategy ` +\n                    `to ensure cache matching and deletion works as expected.`);\n            }\n        }\n        if (!response) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.error(`Cannot cache non-existent response for ` +\n                    `'${getFriendlyURL(effectiveRequest.url)}'.`);\n            }\n            throw new WorkboxError('cache-put-with-no-response', {\n                url: getFriendlyURL(effectiveRequest.url),\n            });\n        }\n        const responseToCache = await this._ensureResponseSafeToCache(response);\n        if (!responseToCache) {\n            if (process.env.NODE_ENV !== 'production') {\n                logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' ` +\n                    `will not be cached.`, responseToCache);\n            }\n            return false;\n        }\n        const { cacheName, matchOptions } = this._strategy;\n        const cache = await self.caches.open(cacheName);\n        const hasCacheUpdateCallback = this.hasCallback('cacheDidUpdate');\n        const oldResponse = hasCacheUpdateCallback\n            ? await cacheMatchIgnoreParams(\n            // TODO(philipwalton): the `__WB_REVISION__` param is a precaching\n            // feature. Consider into ways to only add this behavior if using\n            // precaching.\n            cache, effectiveRequest.clone(), ['__WB_REVISION__'], matchOptions)\n            : null;\n        if (process.env.NODE_ENV !== 'production') {\n            logger.debug(`Updating the '${cacheName}' cache with a new Response ` +\n                `for ${getFriendlyURL(effectiveRequest.url)}.`);\n        }\n        try {\n            await cache.put(effectiveRequest, hasCacheUpdateCallback ? responseToCache.clone() : responseToCache);\n        }\n        catch (error) {\n            if (error instanceof Error) {\n                // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\n                if (error.name === 'QuotaExceededError') {\n                    await executeQuotaErrorCallbacks();\n                }\n                throw error;\n            }\n        }\n        for (const callback of this.iterateCallbacks('cacheDidUpdate')) {\n            await callback({\n                cacheName,\n                oldResponse,\n                newResponse: responseToCache.clone(),\n                request: effectiveRequest,\n                event: this.event,\n            });\n        }\n        return true;\n    }\n    /**\n     * Checks the list of plugins for the `cacheKeyWillBeUsed` callback, and\n     * executes any of those callbacks found in sequence. The final `Request`\n     * object returned by the last plugin is treated as the cache key for cache\n     * reads and/or writes. If no `cacheKeyWillBeUsed` plugin callbacks have\n     * been registered, the passed request is returned unmodified\n     *\n     * @param {Request} request\n     * @param {string} mode\n     * @return {Promise<Request>}\n     */\n    async getCacheKey(request, mode) {\n        const key = `${request.url} | ${mode}`;\n        if (!this._cacheKeys[key]) {\n            let effectiveRequest = request;\n            for (const callback of this.iterateCallbacks('cacheKeyWillBeUsed')) {\n                effectiveRequest = toRequest(await callback({\n                    mode,\n                    request: effectiveRequest,\n                    event: this.event,\n                    // params has a type any can't change right now.\n                    params: this.params, // eslint-disable-line\n                }));\n            }\n            this._cacheKeys[key] = effectiveRequest;\n        }\n        return this._cacheKeys[key];\n    }\n    /**\n     * Returns true if the strategy has at least one plugin with the given\n     * callback.\n     *\n     * @param {string} name The name of the callback to check for.\n     * @return {boolean}\n     */\n    hasCallback(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (name in plugin) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Runs all plugin callbacks matching the given name, in order, passing the\n     * given param object (merged ith the current plugin state) as the only\n     * argument.\n     *\n     * Note: since this method runs all plugins, it's not suitable for cases\n     * where the return value of a callback needs to be applied prior to calling\n     * the next callback. See\n     * {@link workbox-strategies.StrategyHandler#iterateCallbacks}\n     * below for how to handle that case.\n     *\n     * @param {string} name The name of the callback to run within each plugin.\n     * @param {Object} param The object to pass as the first (and only) param\n     *     when executing each callback. This object will be merged with the\n     *     current plugin state prior to callback execution.\n     */\n    async runCallbacks(name, param) {\n        for (const callback of this.iterateCallbacks(name)) {\n            // TODO(philipwalton): not sure why `any` is needed. It seems like\n            // this should work with `as WorkboxPluginCallbackParam[C]`.\n            await callback(param);\n        }\n    }\n    /**\n     * Accepts a callback and returns an iterable of matching plugin callbacks,\n     * where each callback is wrapped with the current handler state (i.e. when\n     * you call each callback, whatever object parameter you pass it will\n     * be merged with the plugin's current state).\n     *\n     * @param {string} name The name fo the callback to run\n     * @return {Array<Function>}\n     */\n    *iterateCallbacks(name) {\n        for (const plugin of this._strategy.plugins) {\n            if (typeof plugin[name] === 'function') {\n                const state = this._pluginStateMap.get(plugin);\n                const statefulCallback = (param) => {\n                    const statefulParam = Object.assign(Object.assign({}, param), { state });\n                    // TODO(philipwalton): not sure why `any` is needed. It seems like\n                    // this should work with `as WorkboxPluginCallbackParam[C]`.\n                    return plugin[name](statefulParam);\n                };\n                yield statefulCallback;\n            }\n        }\n    }\n    /**\n     * Adds a promise to the\n     * [extend lifetime promises]{@link https://w3c.github.io/ServiceWorker/#extendableevent-extend-lifetime-promises}\n     * of the event event associated with the request being handled (usually a\n     * `FetchEvent`).\n     *\n     * Note: you can await\n     * {@link workbox-strategies.StrategyHandler~doneWaiting}\n     * to know when all added promises have settled.\n     *\n     * @param {Promise} promise A promise to add to the extend lifetime promises\n     *     of the event that triggered the request.\n     */\n    waitUntil(promise) {\n        this._extendLifetimePromises.push(promise);\n        return promise;\n    }\n    /**\n     * Returns a promise that resolves once all promises passed to\n     * {@link workbox-strategies.StrategyHandler~waitUntil}\n     * have settled.\n     *\n     * Note: any work done after `doneWaiting()` settles should be manually\n     * passed to an event's `waitUntil()` method (not this handler's\n     * `waitUntil()` method), otherwise the service worker thread my be killed\n     * prior to your work completing.\n     */\n    async doneWaiting() {\n        let promise;\n        while ((promise = this._extendLifetimePromises.shift())) {\n            await promise;\n        }\n    }\n    /**\n     * Stops running the strategy and immediately resolves any pending\n     * `waitUntil()` promises.\n     */\n    destroy() {\n        this._handlerDeferred.resolve(null);\n    }\n    /**\n     * This method will call cacheWillUpdate on the available plugins (or use\n     * status === 200) to determine if the Response is safe and valid to cache.\n     *\n     * @param {Request} options.request\n     * @param {Response} options.response\n     * @return {Promise<Response|undefined>}\n     *\n     * @private\n     */\n    async _ensureResponseSafeToCache(response) {\n        let responseToCache = response;\n        let pluginsUsed = false;\n        for (const callback of this.iterateCallbacks('cacheWillUpdate')) {\n            responseToCache =\n                (await callback({\n                    request: this.request,\n                    response: responseToCache,\n                    event: this.event,\n                })) || undefined;\n            pluginsUsed = true;\n            if (!responseToCache) {\n                break;\n            }\n        }\n        if (!pluginsUsed) {\n            if (responseToCache && responseToCache.status !== 200) {\n                responseToCache = undefined;\n            }\n            if (process.env.NODE_ENV !== 'production') {\n                if (responseToCache) {\n                    if (responseToCache.status !== 200) {\n                        if (responseToCache.status === 0) {\n                            logger.warn(`The response for '${this.request.url}' ` +\n                                `is an opaque response. The caching strategy that you're ` +\n                                `using will not cache opaque responses by default.`);\n                        }\n                        else {\n                            logger.debug(`The response for '${this.request.url}' ` +\n                                `returned a status code of '${response.status}' and won't ` +\n                                `be cached as a result.`);\n                        }\n                    }\n                }\n            }\n        }\n        return responseToCache;\n    }\n}\nexport { StrategyHandler };\n","\"use strict\";\n// @ts-ignore\ntry {\n    self['workbox:strategies:6.6.0'] && _();\n}\ncatch (e) { }\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { CacheFirst } from './CacheFirst.js';\nimport { CacheOnly } from './CacheOnly.js';\nimport { NetworkFirst } from './NetworkFirst.js';\nimport { NetworkOnly } from './NetworkOnly.js';\nimport { StaleWhileRevalidate } from './StaleWhileRevalidate.js';\nimport { Strategy } from './Strategy.js';\nimport { StrategyHandler } from './StrategyHandler.js';\nimport './_version.js';\n/**\n * There are common caching strategies that most service workers will need\n * and use. This module provides simple implementations of these strategies.\n *\n * @module workbox-strategies\n */\nexport { CacheFirst, CacheOnly, NetworkFirst, NetworkOnly, StaleWhileRevalidate, Strategy, StrategyHandler, };\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport '../_version.js';\nexport const cacheOkAndOpaquePlugin = {\n    /**\n     * Returns a valid response (to allow caching) if the status is 200 (OK) or\n     * 0 (opaque).\n     *\n     * @param {Object} options\n     * @param {Response} options.response\n     * @return {Response|null}\n     *\n     * @private\n     */\n    cacheWillUpdate: async ({ response }) => {\n        if (response.status === 200 || response.status === 0) {\n            return response;\n        }\n        return null;\n    },\n};\n","/*\n  Copyright 2018 Google LLC\n\n  Use of this source code is governed by an MIT-style\n  license that can be found in the LICENSE file or at\n  https://opensource.org/licenses/MIT.\n*/\nimport { logger } from 'workbox-core/_private/logger.js';\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\nimport '../_version.js';\nexport const messages = {\n    strategyStart: (strategyName, request) => `Using ${strategyName} to respond to '${getFriendlyURL(request.url)}'`,\n    printFinalResponse: (response) => {\n        if (response) {\n            logger.groupCollapsed(`View the final response here.`);\n            logger.log(response || '[No response returned]');\n            logger.groupEnd();\n        }\n    },\n};\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","export * from './index.js';","export * from './index.js';","export * from './index.js';","export * from './index.js';","export * from './index.js';","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/// <reference lib=\"webworker\" />\n/* eslint-disable no-restricted-globals */\n\n// This service worker can be customized!\n// See https://developers.google.com/web/tools/workbox/modules\n// for the list of available Workbox modules, or add any other\n// code you'd like.\n// You can also remove this file if you'd prefer not to use a\n// service worker, and the Workbox build step will be skipped.\n\nimport { clientsClaim } from 'workbox-core';\nimport { ExpirationPlugin } from 'workbox-expiration';\nimport { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\nimport { registerRoute } from 'workbox-routing';\nimport { StaleWhileRevalidate } from 'workbox-strategies';\n\ndeclare const self: ServiceWorkerGlobalScope;\n\nclientsClaim();\n\n// Precache all of the assets generated by your build process.\n// Their URLs are injected into the manifest variable below.\n// This variable must be present somewhere in your service worker file,\n// even if you decide not to use precaching. See https://cra.link/PWA\nprecacheAndRoute(self.__WB_MANIFEST);\n\n// Set up App Shell-style routing, so that all navigation requests\n// are fulfilled with your index.html shell. Learn more at\n// https://developers.google.com/web/fundamentals/architecture/app-shell\nconst fileExtensionRegexp = new RegExp('/[^/?]+\\\\.[^/]+$');\nregisterRoute(\n  // Return false to exempt requests from being fulfilled by index.html.\n  ({ request, url }: { request: Request; url: URL }) => {\n    // If this isn't a navigation, skip.\n    if (request.mode !== 'navigate') {\n      return false;\n    }\n\n    // If this is a URL that starts with /_, skip.\n    if (url.pathname.startsWith('/_')) {\n      return false;\n    }\n\n    // If this looks like a URL for a resource, because it contains\n    // a file extension, skip.\n    if (url.pathname.match(fileExtensionRegexp)) {\n      return false;\n    }\n\n    // Return true to signal that we want to use the handler.\n    return true;\n  },\n  createHandlerBoundToURL(process.env.PUBLIC_URL + '/index.html')\n);\n\n// An example runtime caching route for requests that aren't handled by the\n// precache, in this case same-origin .png requests like those from in public/\nregisterRoute(\n  // Add in any other file extensions or routing criteria as needed.\n  ({ url }) => url.origin === self.location.origin && url.pathname.endsWith('.png'),\n  // Customize this strategy as needed, e.g., by changing to CacheFirst.\n  new StaleWhileRevalidate({\n    cacheName: 'images',\n    plugins: [\n      // Ensure that once this runtime cache reaches a maximum size the\n      // least-recently used images are removed.\n      new ExpirationPlugin({ maxEntries: 50 }),\n    ],\n  })\n);\n\n// This allows the web app to trigger skipWaiting via\n// registration.waiting.postMessage({type: 'SKIP_WAITING'})\nself.addEventListener('message', (event) => {\n  if (event.data && event.data.type === 'SKIP_WAITING') {\n    self.skipWaiting();\n  }\n});\n\n// Any other custom service worker logic can go here.\n"]}